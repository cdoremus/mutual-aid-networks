{"version":3,"sources":["serviceWorker.js","utils/index.js","state/networks/reducers.js","state/networks/actions.js","state/selections/selectors.js","state/networks/selectors.js","state/networks/index.js","state/networks/logic.js","state/selections/reducers.js","state/selections/actions.js","state/selections/index.js","state/selections/logic.js","utils/firebaseinit.js","state/store.js","state/constants/index.js","components/Map/Point.js","components/Map/MapInset.js","components/Map/index.js","components/StartNetwork.js","components/Filters/index.jsx","components/NetworkCard/index.js","components/ListView/index.js","containers/DefaultLayout.js","index.js"],"names":["Boolean","window","location","hostname","match","makeConstant","branchOfState","actionType","REQUEST_NETWORKS","SET_NETWORKS","REQUEST_FAILED","initialState","allNetworks","eventReducer","state","type","payload","error","console","log","requestNetworks","getSelectedCategories","selections","categories","getViewState","view","getSearchLocation","searchLocation","getAllNetworks","networks","getFilteredNetworks","createSelector","filter","network","includes","category","getVisibleCards","filteredNetworks","lat","lookup","LatLng","Number","lng","currentEvent","computeDistanceBetween","sort","a","b","actions","logics","createLogic","processOptions","successType","failType","process","deps","firestore","collection","get","then","snapshot","docs","map","doc","data","reducers","selectors","SET_CATEGORY_FILTERS","SET_VIEW_STATE","SET_LAT_LNG","options","language","community","setCategoryFilters","setViewState","setLatLng","action","PREFIX","config","apiKey","authDomain","databaseURL","storageBucket","messagingSenderId","projectId","firebase","initializeApp","firebasedb","database","reduxLogicDependencies","firebaseUrl","httpClient","request","logicMiddleware","createLogicMiddleware","middleware","applyMiddleware","Point","this","geometry","coordinates","scale","bbox","properties","region","contact","socials","social","title","form","mapboxgl","MapInset","props","addClickListener","bind","addLayer","createFeatures","updateData","handleReset","featuresHome","initializeMap","nextProps","length","layer","getSource","setData","features","stateName","setUsState","on","usState","id","LAYER_NAME","paint","source","removeHighlights","bounds","mapId","accessToken","Map","container","doubleClickZoom","dragPan","scrollZoom","style","fitBounds","easeTo","duration","linear","viewState","mapClassNames","classNames","hidden","inset","Fragment","className","data-bounds","React","Component","defaultProps","selectedState","MapView","filterDistrict","includedStates","addPopups","filterForStateInsets","insetOnClickEvent","alaskanetworks","hawaiinetworks","popoverColor","prevProps","resize","setInitialState","setState","e","dataBounds","target","parentNode","getAttribute","split","boundsOne","boundsTwo","concat","popup","Popup","closeButton","closeOnClick","queryRenderedFeatures","point","layers","getCanvas","cursor","feature","link","setLngLat","setHTML","addTo","JSON","parse","document","querySelector","remove","usaButton","createElement","innerHTML","addEventListener","appendChild","addControl","NavigationControl","disable","dragRotate","touchZoomRotate","disableRotation","makeZoomToNationalButton","MapboxGeocoder","countries","marker","zoom","result","returned","center","resetSelections","StartNetwork","CheckboxGroup","Group","Filters","indeterminate","checkAll","onChange","checkedList","setFilters","onCheckAllChange","checked","value","selectedCategories","ele","replace","toLowerCase","NetworkCard","address","neighborhood","extra","justify","href","ListView","visibleCards","Header","Content","Footer","DefaultLayout","theme","mode","lineHeight","Item","key","padding","textAlign","class","connect","networkStateBranch","selectionStateBranch","dispatch","Store","createStore","combineReducers","App","store","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.5af84575.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const makeConstant = (branchOfState, actionType) => `${branchOfState}-${actionType}`;\n\n","import {\n  makeConstant\n} from \"../../utils\";\nconst STATE_BRANCH = 'EVENTS';\n\nexport const REQUEST_NETWORKS = makeConstant(STATE_BRANCH, \"REQUEST_NETWORKS\");\nexport const SET_NETWORKS = makeConstant(STATE_BRANCH, \"SET_NETWORKS\");\nexport const REQUEST_FAILED = makeConstant(STATE_BRANCH, \"REQUEST_FAILED\");\nconst initialState = {\n  allNetworks: [],\n};\n\n\nconst eventReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case SET_NETWORKS:\n      return {\n        ...state,\n        allNetworks: payload,\n        error: null\n      };\n    case REQUEST_FAILED:\n      console.log(`REQUEST_FAILED: ${payload}`);\n      return {\n        ...state,\n        error: payload\n      };\n     default:\n      return state;\n  }\n};\n\nexport default eventReducer;","import {\n  REQUEST_NETWORKS,\n} from './reducers';\n\n\nexport const requestNetworks = () => ({\n  type: REQUEST_NETWORKS,\n});\n\n","import { createSelector } from 'reselect';\n\nexport const getSelectedCategories = (state) => state.selections.categories;\nexport const getViewState = state => state.selections.view;\nexport const getSearchLocation = state => state.selections.searchLocation;","import { createSelector } from 'reselect';\nimport { filter } from 'lodash';\nimport {\n    computeDistanceBetween,\n    LatLng\n} from 'spherical-geometry-js';\n\nimport { getSelectedCategories, getSearchLocation } from '../selections/selectors';\n\nexport const getAllNetworks = state => state.networks.allNetworks;\n\nexport const getFilteredNetworks = createSelector([getAllNetworks, getSelectedCategories], (networks, categories) => {\n    return filter(networks, (network) => {\n        return categories.includes(network.category)\n    })\n})\n\nexport const getVisibleCards = createSelector(\n    [\n        getFilteredNetworks,\n        getSearchLocation,\n    ],\n    (\n        filteredNetworks,\n        location,\n    ) => {\n        if (!location.lat) {\n            return [];\n        }\n        const lookup = new LatLng(Number(location.lat), Number(location.lng));\n        const maxMeters = 50 * 1609.34; // Convert miles to meters before filtering\n        return filteredNetworks.filter((currentEvent) => {\n            const curDistance = computeDistanceBetween(\n                lookup,\n                new LatLng(Number(currentEvent.lat), Number(currentEvent.lng)),\n            );\n            return curDistance < maxMeters;\n        }).sort((a, b) => {\n            const aDistance = computeDistanceBetween(\n                lookup,\n                new LatLng(Number(a.lat), Number(a.lng)),\n            );\n            const bDistance = computeDistanceBetween(\n                lookup,\n                new LatLng(Number(b.lat), Number(b.lng)),\n            );\n            return aDistance - bDistance;\n        });\n    },\n);","import * as actions from \"./actions\";\nimport reducers from \"./reducers\";\nimport * as selectors from \"./selectors\";\nimport logics from \"./logic\";\n\nexport default {\n    actions,\n    logics,\n    reducers,\n    selectors,\n};","import { createLogic } from \"redux-logic\";\n\nimport { REQUEST_NETWORKS, SET_NETWORKS, REQUEST_FAILED } from \"./reducers\";\n\nconst fetchNetworks = createLogic({\n  type: REQUEST_NETWORKS,\n  processOptions: {\n    successType: SET_NETWORKS,\n    failType: REQUEST_FAILED,\n  },\n  process(deps) {\n      const {\n        firestore,\n    } = deps;\n        return firestore.collection('mutual_aid_networks').get()\n          .then((snapshot) => {\n              const allNetworks = snapshot.docs.map(doc => doc.data());\n              return allNetworks;\n          })\n        }\n  })\n\n\nexport default [\n  fetchNetworks,\n];","import {\n  makeConstant\n} from \"../../utils\";\n\nconst STATE_BRANCH = 'SELECTIONS';\nexport const SET_CATEGORY_FILTERS = makeConstant(STATE_BRANCH, 'FILTER_BY_CATEGORY');\nexport const SET_VIEW_STATE = makeConstant(STATE_BRANCH, 'SET_VIEW_STATE');\nexport const SET_LAT_LNG = makeConstant(STATE_BRANCH, 'SET_LAT_LNG');\n\nexport const options = [\"General\", \"Support Request\", \"Support Offer\", \"Information\"];\n\nconst initialState = {\n  view: 'default',\n  categories: options,\n  language: '',\n  community: '',\n  searchLocation: {},\n};\n\nconst selectionReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_CATEGORY_FILTERS:\n      return {\n        ...state,\n        categories: action.payload,\n\n      }\n      case SET_VIEW_STATE:\n        return {\n          ...state,\n          view: action.payload,\n\n        }\n      case SET_LAT_LNG:\n        return {\n          ...state,\n          searchLocation: action.payload,\n        }\n        default:\n          return state;\n  }\n};\n\nexport default selectionReducer;","import { SET_CATEGORY_FILTERS, SET_VIEW_STATE, SET_LAT_LNG } from \"./reducers\";\n\nexport const setCategoryFilters = (payload) => ({\n    type: SET_CATEGORY_FILTERS,\n    payload\n});\n\nexport const setViewState = (payload) => ({\n    type: SET_VIEW_STATE,\n    payload\n});\n\nexport const setLatLng = (payload) => ({\n    type: SET_LAT_LNG,\n    payload,\n});","import * as actions from \"./actions\";\nimport reducers from \"./reducers\";\nimport * as selectors from \"./selectors\";\nimport logics from \"./logic\";\n\nexport default {\n    actions,\n    logics,\n    reducers,\n    selectors,\n};","import { createLogic } from \"redux-logic\"\n\n\nexport default [];","// FIREBASE METHODS\n// Initialize Firebase\nimport firebase from 'firebase';\n\nconst PREFIX = process.env.NODE_ENV === \"production\" ? \"REACT_APP_PROD\" : \"REACT_APP_TESTING\";\n\n\nconsole.log(process.env[`${PREFIX}_PROJECT_ID`]);\nconst config = {\n  apiKey: process.env[`${PREFIX}_FIREBASE_API_KEY`],\n  authDomain: process.env[`${PREFIX}_FIREBASE_AUTH_DOMAIN`],\n  databaseURL: process.env[`${PREFIX}_DATABASE_URL`],\n  storageBucket: process.env[`${PREFIX}_STORAGE_BUCKET`],\n  messagingSenderId: process.env[`${PREFIX}_MESSAGING_SENDER_ID`],\n  projectId: process.env[`${PREFIX}_PROJECT_ID`],\n};\n\nfirebase.initializeApp(config);\nexport const firebasedb = firebase.database();\nexport const firestore = firebase.firestore();\n\nexport default firebase;","import { applyMiddleware, createStore, combineReducers } from 'redux';\nimport { createLogicMiddleware } from 'redux-logic';\nimport request from 'superagent';\n\nimport networks from './networks';\nimport selections from './selections';\n\n\nimport { firebaseUrl } from '../state/constants';\nimport {\n  firebasedb,\n  firestore,\n} from '../utils/firebaseinit';\n\nconst reducers = {\n  networks: networks.reducers,\n  selections: selections.reducers,\n};\n\nconst logics = [\n  ...networks.logics,\n  ...selections.logics,\n];\n\nconst reduxLogicDependencies = {\n  firebaseUrl: firebaseUrl,\n  firebasedb,\n  firestore,\n  httpClient: request,\n};\n\nconst logicMiddleware = createLogicMiddleware(logics, reduxLogicDependencies);\n\nlet middleware = applyMiddleware(\n  logicMiddleware\n);\n\nif (process.env.NODE_ENV === `development` && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) {\n  middleware = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__(middleware);\n}\n\nexport default () => {\n  const store = createStore(\n    combineReducers(reducers),\n    middleware\n  );\n\n  return store;\n};","export const firebaseUrl = process.env.NODE_ENV === \"production\" ? process.env.REACT_APP_PROD_DATABASE_URL : process.env.REACT_APP_TESTING_DATABASE_URL;\n","class Point {\n    constructor(network) {\n        this.type = 'Feature';\n        this.geometry = {\n            coordinates: [Number(network.lng), Number(network.lat)],\n            type: 'Point',\n        };\n        const scale = network.bbox[3] - network.bbox[1];\n        this.properties = {\n            region: network.region,\n            contact: network.contact || null,\n            socials: network.social || null,\n            state: network.state,\n            title: network.title,\n            form: network.form,\n            category: network.category || 'General',\n            bbox: network.bbox,\n            lat: network.lat,\n            lng: network.lng,\n            scale: scale * 10,\n        };\n    }\n}\n\nexport default Point;\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Point from './Point';\nimport LAYER_NAME from '.';\n\nconst mapboxgl = window.mapboxgl;\n\nclass MapInset extends React.Component {\n  constructor(props) {\n    super(props);\n    this.addClickListener = this.addClickListener.bind(this);\n    this.addLayer = this.addLayer.bind(this);\n    this.createFeatures = this.createFeatures.bind(this);\n    this.updateData = this.updateData.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n  }\n\n  componentDidMount() {\n    const { networks } = this.props;\n    const featuresHome = this.createFeatures(networks);\n    this.initializeMap(featuresHome);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const {\n      networks,\n    } = nextProps;\n\n    if (networks.length !== this.props.networks.length) {\n      // this.updateData(networks, LAYER_NAME);\n    }\n  }\n\n  updateData(networks, layer) {\n    const featuresHome = this.createFeatures(networks);\n    if (!this.map.getSource(layer)) {\n      return;\n    }\n    this.map.getSource(layer).setData(featuresHome);\n  }\n\n  createFeatures(networks) {\n    const featuresHome = {\n      features: [],\n      type: 'FeatureCollection',\n    };\n\n    featuresHome.features = networks.map((network) => {\n\n      const newFeature = new Point(network);\n      return newFeature;\n    });\n    return featuresHome;\n  }\n\n  addClickListener() {\n    const {\n      stateName,\n      setUsState,\n    } = this.props;\n    const { map } = this;\n\n    map.on('click', () => {\n      setUsState({ usState: stateName });\n    });\n  }\n\n  addLayer(featuresHome) {\n    this.map.addLayer(\n      {\n        id: LAYER_NAME,\n        paint: {\n          'circle-color': '#11b4da',\n          'circle-opacity': 0.5,\n          'circle-radius': 4,\n          'circle-stroke-color': '#fff',\n          'circle-stroke-width': 1,\n        },\n        source: {\n          data: featuresHome,\n          type: 'geojson',\n        },\n        type: 'circle',\n      },\n      'district_interactive',\n    );\n  }\n\n\n  handleReset() {\n    this.removeHighlights();\n    // this.props.resetSelections();\n  }\n\n\n  initializeMap(featuresHome) {\n    const {\n      bounds,\n      mapId,\n    } = this.props;\n\n    mapboxgl.accessToken =\n        'pk.eyJ1IjoidG93bmhhbGxwcm9qZWN0IiwiYSI6ImNqMnRwOG4wOTAwMnMycG1yMGZudHFxbWsifQ.FXyPo3-AD46IuWjjsGPJ3Q';\n    const styleUrl = 'mapbox://styles/townhallproject/cjgr7qoqr00012ro4hnwlvsyp';\n\n    this.map = new mapboxgl.Map({\n      container: mapId,\n      doubleClickZoom: false,\n      dragPan: false,\n      scrollZoom: false,\n      style: styleUrl,\n    });\n\n    this.map.fitBounds(bounds, {\n      easeTo: { duration: 0 },\n      linear: true,\n    });\n    // map on 'load'\n    this.map.on('load', () => {\n      this.addClickListener();\n      this.addLayer(featuresHome);\n\n    });\n  }\n\n  render() {\n    const {\n      viewState,\n      mapId,\n    } = this.props;\n    const mapClassNames = classNames({\n      hidden: viewState === 'list',\n      inset: true,\n    });\n    return (\n      <React.Fragment>\n        <div id={mapId} className={mapClassNames} data-bounds={this.props.bounds} />\n      </React.Fragment>\n    );\n  }\n}\n\nMapInset.propTypes = {\n  bounds: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)).isRequired,\n  colorMap: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  networks: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  mapId: PropTypes.string.isRequired,\n  resetSelections: PropTypes.func.isRequired,\n  selectedState: PropTypes.string,\n  setUsState: PropTypes.func.isRequired,\n  stateName: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nMapInset.defaultProps = {\n  selectedState: '',\n};\n\nexport default MapInset;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { find, filter } from 'lodash';\nimport geoViewport from '@mapbox/geo-viewport';\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\n\nimport Point from './Point';\n\nimport MapInset from './MapInset';\nimport './style.scss';\nimport './popover.scss';\n\nexport const LAYER_NAME = 'networks-dots'\nconst mapboxgl = window.mapboxgl;\nclass MapView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.filterDistrict = ['any'];\n    this.includedStates = ['in', 'NAME'];\n\n    this.addPopups = this.addPopups.bind(this);\n    this.addClickListener = this.addClickListener.bind(this);\n    this.addLayer = this.addLayer.bind(this);\n    this.createFeatures = this.createFeatures.bind(this);\n    this.updateData = this.updateData.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.filterForStateInsets = this.filterForStateInsets.bind(this);\n    this.insetOnClickEvent = this.insetOnClickEvent.bind(this);\n    this.state = {\n      alaskanetworks: filter(this.props.networks, { state: 'AK' }),\n      hawaiinetworks: filter(this.props.networks, { state: 'HI' }),\n      popoverColor: 'popover-general-icon',\n    };\n  }\n\n  componentDidMount() {\n    const { networks } = this.props;\n    const featuresHome = this.createFeatures(networks);\n    this.initializeMap(featuresHome);\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      networks,\n    } = prevProps;\n    this.map.resize();\n    if (networks.length !== this.props.networks.length) {\n      this.updateData(this.props.networks)\n    }\n    if (prevProps.viewState !== this.props.viewState) {\n      if (this.props.viewState === 'default') {\n        this.setInitialState();\n      }\n\n    }\n  }\n\n  filterForStateInsets(networks) {\n    const alaskanetworks = filter(networks, { state: 'AK' });\n    const hawaiinetworks = filter(networks, { state: 'HI' });\n    this.setState({\n      alaskanetworks,\n      hawaiinetworks,\n    });\n  }\n\n  insetOnClickEvent(e) {\n    this.setState({ inset: false });\n    const dataBounds = e.target.parentNode.parentNode.getAttribute('data-bounds').split(',');\n    const boundsOne = [Number(dataBounds[0]), Number(dataBounds[1])];\n    const boundsTwo = [Number(dataBounds[2]), Number(dataBounds[3])];\n    const bounds = boundsOne.concat(boundsTwo);\n    this.map.fitBounds(bounds);\n  }\n\n  updateData(networks) {\n    const featuresHome = this.createFeatures(networks);\n    this.map.fitBounds([[-128.8, 23.6], [-65.4, 50.2]]);\n    if (!this.map.getSource(LAYER_NAME)) {\n      return;\n    }\n    this.map.getSource(LAYER_NAME).setData(featuresHome);\n  }\n\n  createFeatures(networks) {\n    const featuresHome = {\n      features: [],\n      type: 'FeatureCollection',\n    };\n    featuresHome.features = networks.map((network) => {\n      const newFeature = new Point(network);\n      return newFeature;\n    });\n    return featuresHome;\n  }\n\n  addPopups(layer) {\n    const { map } = this;\n\n    const popup = new mapboxgl.Popup({\n      closeButton: true,\n      closeOnClick: true,\n    });\n\n    map.on('mousemove', (e) => {\n      const features = map.queryRenderedFeatures(e.point, { layers: [layer] });\n      // Change the cursor style as a UI indicator.\n      map.getCanvas().style.cursor = (features.length) ? 'pointer' : '';\n\n      if (features.length) {\n        const feature = features[0];\n        const { properties } = feature;\n\n        this.setState({\n          popoverColor: `popover-${feature.properties.category}`\n        });\n        const link = properties.form ? `<a href=${properties.form}>Link to form</a>` : `<a href=${properties.socials}>Link to group</a>`;\n        return popup.setLngLat(feature.geometry.coordinates)\n          .setHTML(`\n            <h4>${properties.title}</h4>\n            <div>${link}</div>`)\n \n          .addTo(map);\n      }\n      return undefined;\n    });\n  }\n\n  addClickListener() {\n\n    const { map } = this;\n    const {\n      setViewState,\n      setLatLng\n    } = this.props;\n\n    map.on('click', (e) => {\n      const features = map.queryRenderedFeatures(\n        e.point,\n        {\n          layers: [LAYER_NAME],\n        },\n      );\n\n      if (features.length > 0) {\n        let bbox = JSON.parse(features[0].properties.bbox);\n        setViewState('list');\n        setLatLng({lat: features[0].properties.lat, lng: features[0].properties.lng})\n        map.fitBounds(bbox);\n      }\n    });\n  }\n\n  addLayer(featuresHome) {\n    this.map.addLayer(\n      {\n        id: LAYER_NAME,\n        paint: {\n          'circle-opacity': 0.5,\n          'circle-radius': [\n            'interpolate', ['linear'],\n            ['number', ['get', 'scale'], 5],\n              1,\n              5,\n              70,\n              70\n          ], \n          'circle-stroke-color': '#fff',\n          'circle-stroke-width': 1,\n          'circle-color': [\n            'match',\n            ['get', 'category'],\n            'Support Request',\n            '#ef4822',\n            'Support Offer',\n            '#6ac1e5',\n            'General',\n            '#8048f3',\n            /* other */\n            '#057A8F'\n          ]\n        },\n        source: {\n          data: featuresHome,\n          type: 'geojson',\n        },\n        type: 'circle',\n      },\n      'district_interactive',\n    );\n  }\n\n\n  handleReset() {\n    const {\n      setViewState\n    } = this.props;\n\n  \n    setViewState('default');\n  }\n\n  setInitialState() {\n    this.map.fitBounds([\n      [-128.8, 23.6],\n      [-65.4, 50.2]\n    ]);\n    this.map.resize();\n  }\n\n  // Creates the button in our zoom controls to go to the national view\n  makeZoomToNationalButton() {\n    document.querySelector('.mapboxgl-ctrl-compass').remove();\n    if (document.querySelector('.mapboxgl-ctrl-usa')) {\n      document.querySelector('.mapboxgl-ctrl-usa').remove();\n    }\n    const usaButton = document.createElement('button');\n    usaButton.className = 'mapboxgl-ctrl-icon mapboxgl-ctrl-usa';\n    usaButton.innerHTML = '<span class=\"usa-icon\"></span>';\n\n    usaButton.addEventListener('click', this.handleReset);\n    document.querySelector('.mapboxgl-ctrl-group').appendChild(usaButton);\n  }\n\n  initializeMap(featuresHome) {\n    const {\n      setViewState,\n      setLatLng\n    } = this.props;\n\n    mapboxgl.accessToken =\n      'pk.eyJ1IjoidG93bmhhbGxwcm9qZWN0IiwiYSI6ImNqMnRwOG4wOTAwMnMycG1yMGZudHFxbWsifQ.FXyPo3-AD46IuWjjsGPJ3Q';\n    const styleUrl = 'mapbox://styles/townhallproject/cjgr7qoqr00012ro4hnwlvsyp';\n\n    this.map = new mapboxgl.Map({\n      container: 'map',\n      style: styleUrl,\n    });\n\n    // Set Mapbox map controls\n    this.map.addControl(new mapboxgl.NavigationControl());\n    this.map.scrollZoom.disable();\n    this.map.dragRotate.disable();\n    this.map.touchZoomRotate.disableRotation();\n    this.makeZoomToNationalButton();\n    const { map } = this;\n    this.map.addControl(\n      new MapboxGeocoder({\n        accessToken: mapboxgl.accessToken,\n        mapboxgl: mapboxgl,\n        countries: 'us',\n        marker: false,\n        zoom: 12,\n      })\n      .on('clear', function (result) {\n        setViewState('default');\n      })\n      .on('result', function (returned) {\n        setViewState('list');\n        map.fitBounds(returned.result.bbox);\n        setLatLng({\n          lat: returned.result.center[1],\n          lng: returned.result.center[0]\n        })\n      }),\n      'top-left'\n    );\n    // map on 'load'\n    this.map.on('load', () => {\n      this.map.fitBounds([[-128.8, 23.6], [-65.4, 50.2]]);\n      this.addClickListener();\n      this.addLayer(featuresHome);\n      this.addPopups(LAYER_NAME);\n      // this.map.getSource(LAYER_NAME).setData(featuresHome);\n    });\n  }\n\n  render() {\n    const {\n      center,\n      resetSelections,\n      setLatLng,\n      setUsState,\n      viewState,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <div id=\"map\" className={this.state.popoverColor}>\n          <div className=\"map-overlay\" id=\"legend\">\n            <MapInset\n              networks={this.state.alaskanetworks}\n              center={center}\n              stateName=\"AK\"\n              viewState={viewState}\n              resetSelections={resetSelections}\n              setLatLng={setLatLng}\n              setUsState={setUsState}\n              mapId=\"map-overlay-alaska\"\n              bounds={[[-170.15625, 51.72702815704774], [-127.61718749999999, 71.85622888185527]]}\n            />\n            <MapInset\n              networks={this.state.hawaiinetworks}\n              stateName=\"HI\"\n              center={center}\n              viewState={viewState}\n              resetSelections={resetSelections}\n              setLatLng={setLatLng}\n              setUsState={setUsState}\n              mapId=\"map-overlay-hawaii\"\n              bounds={[\n                [-161.03759765625, 18.542116654448996],\n                [-154.22607421875, 22.573438264572406]]}\n            />\n          </div>\n        </div>\n\n      </React.Fragment>\n    );\n  }\n}\n\nMapView.propTypes = {\n  networks: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  setLatLng: PropTypes.func.isRequired,\n};\n\nMapView.defaultProps = {\n\n};\n\nexport default MapView;\n","import React from 'react';\nimport { Button } from 'antd';\n\nconst StartNetwork = () => {\n  return (\n      <div className=\"start-network-container\">\n        <Button id=\"start-network-button\">Start a Mutual Aid Network</Button>\n      </div>\n  )\n};\n\nexport default StartNetwork;","import React from \"react\";\nimport { Checkbox } from 'antd';\n\nimport { options }  from '../../state/selections/reducers';\n\nimport './style.scss';\n\nconst CheckboxGroup = Checkbox.Group;\n\nclass Filters extends React.Component {\n    state = {\n        // checkedList: this.props.selectedCategories,\n        indeterminate: false,\n        checkAll: true,\n    };\n\n    onChange = checkedList => {\n        \n        this.props.setFilters(checkedList);\n        this.setState({\n            // checkedList,\n            indeterminate: !!checkedList.length && checkedList.length < options.length,\n            checkAll: checkedList.length === options.length,\n        });\n    };\n\n    onCheckAllChange = e => {\n        const checkedList = e.target.checked ? options : [];\n        this.setState({\n            // checkedList,\n            indeterminate: false,\n            checkAll: e.target.checked,\n        });\n        this.props.setFilters(checkedList);\n    };\n\n    render() {\n        return (\n            <div className=\"filter-container\">\n                <div className=\"site-checkbox-all-wrapper\">\n                    <Checkbox\n                        indeterminate={this.state.indeterminate}\n                        onChange={this.onCheckAllChange}\n                        checked={this.state.checkAll}\n                    >\n                        Select all\n                    </Checkbox>\n                </div>\n                <br />\n                <CheckboxGroup\n                    value={this.props.selectedCategories}\n                    onChange={this.onChange}\n                >\n                    {options.map((ele) => <Checkbox className={ele.replace(' ', '-').toLowerCase()} value={ele}>{ele}</Checkbox>)}\n                </CheckboxGroup>\n            </div>\n        );\n    }\n}\n\nexport default Filters;","import React from 'react';\nimport {\n  Card,\n  Row\n} from 'antd';\nimport './style.scss';\n\n\nconst NetworkCard = (props) => {\n\n  const parseNetworks = (networks) => {\n    return networks.map(network => {\n      const {\n        address,\n        title,\n        neighborhood,\n        form,\n        social,\n        category,\n        community,\n        language\n      } = network\n      return (\n        <Card\n          className='network-card'\n          title={title}\n          extra={\n            <ul className='list-inline'>\n            {category && <li>{category}</li>}\n            {community && <li>{community}</li>}\n          </ul>\n          }\n        >\n          <ul className='list-inline'>\n            {neighborhood && <li>{neighborhood}</li>}\n            {address && <li>{address}</li>}\n            {language && <li>{language}</li>}\n          </ul>\n          <Row justify=\"space-between\">\n            {form && <a href={form} target=\"_blank\" className=\"button\">Participate in this community</a>}\n            {social && <a href={social} target=\"_blank\" className=\"button\">Join social media</a>}\n          </Row>\n        </Card>\n      )\n    })\n  }\n\n  return (\n    <>\n      {parseNetworks(props.networks)}\n    </>\n  )\n}\n\nexport default NetworkCard\n","import React from 'react';\nimport { Button, Table } from 'antd';\nimport NetworkCard from '../NetworkCard'\n\nconst ListView = ({ visibleCards }) => {\n  const noNetworkMessage = 'There are no support requests or networks nearby.'\n  return (\n      <div className=\"list-container\">\n        {\n          visibleCards.length ? <NetworkCard networks={visibleCards} /> : noNetworkMessage\n        }\n      </div>\n  )\n};\n\nexport default ListView;","import React from 'react';\nimport {\n  connect\n} from 'react-redux';\nimport { Layout, Menu } from 'antd';\n\nimport networkStateBranch from '../state/networks';\nimport selectionStateBranch from '../state/selections';\nimport MapView from '../components/Map';\nimport StartNetwork from '../components/StartNetwork';\nimport Filters from '../components/Filters';\nimport ListView from '../components/ListView';\n\nimport './style.scss';\n\nconst { Header, Content, Footer } = Layout;\n\nclass DefaultLayout extends React.Component {\n  componentDidMount() {\n    const {\n      requestNetworks\n    } = this.props;\n    requestNetworks();\n  }\n  render() {\n    const {\n      setFilters,\n      selectedCategories,\n      filteredNetworks,\n      setViewState,\n      viewState,\n      setLatLng,\n      visibleCards,\n    } = this.props;\n    \n    if (!filteredNetworks.length) {\n      return null;\n    }\n    // viewState --> list or default\n    console.log(this.props)\n    return (\n      <Layout className=\"layout\">\n        <Header>\n          <div className=\"logo\" />\n          <Menu\n            theme=\"dark\"\n            mode=\"horizontal\"\n            style={{ lineHeight: '64px' }}\n          >\n            <Menu.Item key=\"1\">nav 1</Menu.Item>\n            <Menu.Item key=\"2\">nav 2</Menu.Item>\n            <Menu.Item key=\"3\">nav 3</Menu.Item>\n          </Menu>\n        </Header>\n        <Content style={{ padding: '0 50px' }}>\n          <div className=\"main-container\">\n            <Filters \n              setFilters={setFilters}\n              selectedCategories={selectedCategories}\n            />\n            <div className={`interactive-content-${viewState}`}>\n              <MapView\n                setViewState={setViewState}\n                networks={filteredNetworks}\n                viewState={viewState}\n                setLatLng={setLatLng}\n              />\n              <ListView \n                visibleCards={visibleCards}\n              />\n            </div>\n            <div className=\"tagline\">Find Mutual Aid Networks and other community self-support projects near you. Join these important efforts, offer resources, or submit needs requests.</div>\n            <StartNetwork />\n          </div>\n        </Content>\n        <Footer style={{ textAlign: 'center' }}>\n          <div class=\"footer-text\">\n            We list these networks as a public resource. We cannot verify or vouch for any network or individual offerings. Please exercise all necessary judgement when interacting with community members not previously known to you.\n          </div>\n        </Footer>\n      </Layout>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  filteredNetworks: networkStateBranch.selectors.getFilteredNetworks(state),\n  selectedCategories: selectionStateBranch.selectors.getSelectedCategories(state),\n  viewState: selectionStateBranch.selectors.getViewState(state),\n  searchLocation: selectionStateBranch.selectors.getSearchLocation(state),\n  visibleCards: networkStateBranch.selectors.getVisibleCards(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  requestNetworks: () => dispatch(networkStateBranch.actions.requestNetworks()),\n  setFilters: (payload) => dispatch(selectionStateBranch.actions.setCategoryFilters(payload)),\n  setViewState: (payload) => dispatch(selectionStateBranch.actions.setViewState(payload)),\n  setLatLng: (payload) => dispatch(selectionStateBranch.actions.setLatLng(payload))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DefaultLayout);\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport configureStore from './state/store';\n// Containers\nimport DefaultLayout from './containers/DefaultLayout';\nimport './index.css';\n\n// Bootstrap the store\nvar Store = configureStore();\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={Store}>\n        <DefaultLayout />\n      </Provider>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}