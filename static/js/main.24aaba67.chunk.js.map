{"version":3,"sources":["serviceWorker.js","utils/index.js","state/networks/reducers.js","state/networks/actions.js","state/selections/selectors.js","state/networks/selectors.js","state/networks/index.js","state/networks/logic.js","state/selections/reducers.js","state/selections/actions.js","state/selections/index.js","state/selections/logic.js","utils/firebaseinit.js","state/store.js","state/constants/index.js","components/Map/Point.js","components/Map/MapInset.js","components/Map/index.js","components/SubmitNetwork/index.jsx","components/Filters/index.jsx","components/NetworkCard/index.js","components/ListView/index.js","containers/DefaultLayout.js","index.js"],"names":["Boolean","window","location","hostname","match","makeConstant","branchOfState","actionType","REQUEST_NETWORKS","SET_NETWORKS","REQUEST_FAILED","initialState","allNetworks","eventReducer","state","type","payload","error","console","log","requestNetworks","getSelectedCategories","selections","categories","getViewState","view","getSearchLocation","searchLocation","getAllNetworks","networks","getFilteredNetworks","createSelector","length","filter","network","includes","category","getVisibleCards","filteredNetworks","lat","lookup","LatLng","Number","lng","currentEvent","computeDistanceBetween","sort","a","b","actions","logics","createLogic","processOptions","successType","failType","process","deps","firestore","collection","get","then","snapshot","docs","map","doc","data","reducers","selectors","SET_CATEGORY_FILTERS","SET_VIEW_STATE","SET_LAT_LNG","options","language","community","setCategoryFilters","setViewState","setLatLng","action","PREFIX","config","apiKey","authDomain","databaseURL","storageBucket","messagingSenderId","projectId","firebase","initializeApp","firebasedb","database","reduxLogicDependencies","firebaseUrl","httpClient","request","logicMiddleware","createLogicMiddleware","middleware","applyMiddleware","Point","this","geometry","coordinates","scale","bbox","properties","region","contact","socials","social","title","form","mapboxgl","MapInset","props","addClickListener","bind","addLayer","createFeatures","updateData","handleReset","featuresHome","initializeMap","nextProps","layer","getSource","setData","features","bounds","setBounds","on","id","LAYER_NAME","paint","source","removeHighlights","mapId","accessToken","Map","container","doubleClickZoom","dragPan","scrollZoom","style","fitBounds","easeTo","duration","linear","viewState","mapClassNames","classNames","hidden","inset","Fragment","className","data-bounds","React","Component","defaultProps","selectedState","MapView","filterDistrict","includedStates","addPopups","filterForStateInsets","insetOnClickEvent","handleClickOnInset","alaskanetworks","hawaiinetworks","popoverColor","prevProps","resize","setInitialState","setState","e","dataBounds","target","parentNode","getAttribute","split","boundsOne","boundsTwo","concat","popup","Popup","closeButton","closeOnClick","queryRenderedFeatures","point","layers","getCanvas","cursor","feature","link","setLngLat","setHTML","addTo","JSON","parse","center","LngLatBounds","getCenter","document","querySelector","remove","usaButton","createElement","innerHTML","addEventListener","appendChild","addControl","NavigationControl","disable","dragRotate","touchZoomRotate","disableRotation","makeZoomToNationalButton","MapboxGeocoder","countries","marker","zoom","result","returned","resetSelections","setUsState","stateName","SubmitNetwork","href","CheckboxGroup","Group","Filters","indeterminate","checkAll","onChange","checkedList","setFilters","onCheckAllChange","checked","value","selectedCategories","ele","replace","toLowerCase","NetworkCard","address","neighborhood","extra","justify","ListView","visibleCards","Header","Content","Footer","DefaultLayout","theme","mode","lineHeight","Item","key","padding","textAlign","class","connect","networkStateBranch","selectionStateBranch","dispatch","Store","createStore","combineReducers","App","store","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.24aaba67.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const makeConstant = (branchOfState, actionType) => `${branchOfState}-${actionType}`;\n\n","import {\n  makeConstant\n} from \"../../utils\";\nconst STATE_BRANCH = 'EVENTS';\n\nexport const REQUEST_NETWORKS = makeConstant(STATE_BRANCH, \"REQUEST_NETWORKS\");\nexport const SET_NETWORKS = makeConstant(STATE_BRANCH, \"SET_NETWORKS\");\nexport const REQUEST_FAILED = makeConstant(STATE_BRANCH, \"REQUEST_FAILED\");\nconst initialState = {\n  allNetworks: [],\n};\n\n\nconst eventReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case SET_NETWORKS:\n      return {\n        ...state,\n        allNetworks: payload,\n        error: null\n      };\n    case REQUEST_FAILED:\n      console.log(`REQUEST_FAILED: ${payload}`);\n      return {\n        ...state,\n        error: payload\n      };\n     default:\n      return state;\n  }\n};\n\nexport default eventReducer;","import {\n  REQUEST_NETWORKS,\n} from './reducers';\n\n\nexport const requestNetworks = () => ({\n  type: REQUEST_NETWORKS,\n});\n\n","import { createSelector } from 'reselect';\n\nexport const getSelectedCategories = (state) => state.selections.categories;\nexport const getViewState = state => state.selections.view;\nexport const getSearchLocation = state => state.selections.searchLocation;","import { createSelector } from 'reselect';\nimport { filter } from 'lodash';\nimport {\n    computeDistanceBetween,\n    LatLng\n} from 'spherical-geometry-js';\n\nimport { getSelectedCategories, getSearchLocation } from '../selections/selectors';\n\nexport const getAllNetworks = state => state.networks.allNetworks;\n\nexport const getFilteredNetworks = createSelector([getAllNetworks, getSelectedCategories], (networks, categories) => {\n    if (!categories.length) {\n        return [];\n    }\n    return filter(networks, (network) => {\n        return categories.includes(network.category)\n    })\n})\n\nexport const getVisibleCards = createSelector(\n    [\n        getFilteredNetworks,\n        getSearchLocation,\n    ],\n    (\n        filteredNetworks,\n        location,\n    ) => {\n        if (!location.lat) {\n            return [];\n        }\n        const lookup = new LatLng(Number(location.lat), Number(location.lng));\n        const maxMeters = 50 * 1609.34; // Convert miles to meters before filtering\n        return filteredNetworks.filter((currentEvent) => {\n            const curDistance = computeDistanceBetween(\n                lookup,\n                new LatLng(Number(currentEvent.lat), Number(currentEvent.lng)),\n            );\n            return curDistance < maxMeters;\n        }).sort((a, b) => {\n            const aDistance = computeDistanceBetween(\n                lookup,\n                new LatLng(Number(a.lat), Number(a.lng)),\n            );\n            const bDistance = computeDistanceBetween(\n                lookup,\n                new LatLng(Number(b.lat), Number(b.lng)),\n            );\n            return aDistance - bDistance;\n        });\n    },\n);","import * as actions from \"./actions\";\nimport reducers from \"./reducers\";\nimport * as selectors from \"./selectors\";\nimport logics from \"./logic\";\n\nexport default {\n    actions,\n    logics,\n    reducers,\n    selectors,\n};","import { createLogic } from \"redux-logic\";\n\nimport { REQUEST_NETWORKS, SET_NETWORKS, REQUEST_FAILED } from \"./reducers\";\n\nconst fetchNetworks = createLogic({\n  type: REQUEST_NETWORKS,\n  processOptions: {\n    successType: SET_NETWORKS,\n    failType: REQUEST_FAILED,\n  },\n  process(deps) {\n      const {\n        firestore,\n    } = deps;\n        return firestore.collection('mutual_aid_networks').get()\n          .then((snapshot) => {\n              const allNetworks = snapshot.docs.map(doc => doc.data());\n              return allNetworks;\n          })\n        }\n  })\n\n\nexport default [\n  fetchNetworks,\n];","import {\n  makeConstant\n} from \"../../utils\";\n\nconst STATE_BRANCH = 'SELECTIONS';\nexport const SET_CATEGORY_FILTERS = makeConstant(STATE_BRANCH, 'FILTER_BY_CATEGORY');\nexport const SET_VIEW_STATE = makeConstant(STATE_BRANCH, 'SET_VIEW_STATE');\nexport const SET_LAT_LNG = makeConstant(STATE_BRANCH, 'SET_LAT_LNG');\n\nexport const options = [\"General\", \"Support Request\", \"Support Offer\", \"Information\"];\n\nconst initialState = {\n  view: 'default',\n  categories: options,\n  language: '',\n  community: '',\n  searchLocation: {},\n};\n\nconst selectionReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_CATEGORY_FILTERS:\n      return {\n        ...state,\n        categories: action.payload,\n\n      }\n      case SET_VIEW_STATE:\n        return {\n          ...state,\n          view: action.payload,\n\n        }\n      case SET_LAT_LNG:\n        return {\n          ...state,\n          searchLocation: action.payload,\n        }\n        default:\n          return state;\n  }\n};\n\nexport default selectionReducer;","import { SET_CATEGORY_FILTERS, SET_VIEW_STATE, SET_LAT_LNG } from \"./reducers\";\n\nexport const setCategoryFilters = (payload) => ({\n    type: SET_CATEGORY_FILTERS,\n    payload\n});\n\nexport const setViewState = (payload) => ({\n    type: SET_VIEW_STATE,\n    payload\n});\n\nexport const setLatLng = (payload) => ({\n    type: SET_LAT_LNG,\n    payload,\n});","import * as actions from \"./actions\";\nimport reducers from \"./reducers\";\nimport * as selectors from \"./selectors\";\nimport logics from \"./logic\";\n\nexport default {\n    actions,\n    logics,\n    reducers,\n    selectors,\n};","import { createLogic } from \"redux-logic\"\n\n\nexport default [];","// FIREBASE METHODS\n// Initialize Firebase\nimport firebase from 'firebase';\n\nconst PREFIX = process.env.NODE_ENV === \"production\" ? \"REACT_APP_PROD\" : \"REACT_APP_TESTING\";\n\n\nconsole.log(process.env[`${PREFIX}_PROJECT_ID`]);\nconst config = {\n  apiKey: process.env[`${PREFIX}_FIREBASE_API_KEY`],\n  authDomain: process.env[`${PREFIX}_FIREBASE_AUTH_DOMAIN`],\n  databaseURL: process.env[`${PREFIX}_DATABASE_URL`],\n  storageBucket: process.env[`${PREFIX}_STORAGE_BUCKET`],\n  messagingSenderId: process.env[`${PREFIX}_MESSAGING_SENDER_ID`],\n  projectId: process.env[`${PREFIX}_PROJECT_ID`],\n};\n\nfirebase.initializeApp(config);\nexport const firebasedb = firebase.database();\nexport const firestore = firebase.firestore();\n\nexport default firebase;","import { applyMiddleware, createStore, combineReducers } from 'redux';\nimport { createLogicMiddleware } from 'redux-logic';\nimport request from 'superagent';\n\nimport networks from './networks';\nimport selections from './selections';\n\n\nimport { firebaseUrl } from '../state/constants';\nimport {\n  firebasedb,\n  firestore,\n} from '../utils/firebaseinit';\n\nconst reducers = {\n  networks: networks.reducers,\n  selections: selections.reducers,\n};\n\nconst logics = [\n  ...networks.logics,\n  ...selections.logics,\n];\n\nconst reduxLogicDependencies = {\n  firebaseUrl: firebaseUrl,\n  firebasedb,\n  firestore,\n  httpClient: request,\n};\n\nconst logicMiddleware = createLogicMiddleware(logics, reduxLogicDependencies);\n\nlet middleware = applyMiddleware(\n  logicMiddleware\n);\n\nif (process.env.NODE_ENV === `development` && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) {\n  middleware = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__(middleware);\n}\n\nexport default () => {\n  const store = createStore(\n    combineReducers(reducers),\n    middleware\n  );\n\n  return store;\n};","export const firebaseUrl = process.env.NODE_ENV === \"production\" ? process.env.REACT_APP_PROD_DATABASE_URL : process.env.REACT_APP_TESTING_DATABASE_URL;\n","class Point {\n    constructor(network) {\n        this.type = 'Feature';\n        this.geometry = {\n            coordinates: [Number(network.lng), Number(network.lat)],\n            type: 'Point',\n        };\n        const scale = network.bbox[3] - network.bbox[1];\n        this.properties = {\n            region: network.region,\n            contact: network.contact || null,\n            socials: network.social || null,\n            state: network.state,\n            title: network.title,\n            form: network.form,\n            category: network.category || 'General',\n            bbox: network.bbox,\n            lat: network.lat,\n            lng: network.lng,\n            scale: scale * 10,\n        };\n    }\n}\n\nexport default Point;\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Point from './Point';\nimport LAYER_NAME from '.';\n\nconst mapboxgl = window.mapboxgl;\n\nclass MapInset extends React.Component {\n  constructor(props) {\n    super(props);\n    this.addClickListener = this.addClickListener.bind(this);\n    this.addLayer = this.addLayer.bind(this);\n    this.createFeatures = this.createFeatures.bind(this);\n    this.updateData = this.updateData.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n  }\n\n  componentDidMount() {\n    const { networks } = this.props;\n    const featuresHome = this.createFeatures(networks);\n    this.initializeMap(featuresHome);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const {\n      networks,\n    } = nextProps;\n\n    if (networks.length !== this.props.networks.length) {\n      // this.updateData(networks, LAYER_NAME);\n    }\n  }\n\n  updateData(networks, layer) {\n    const featuresHome = this.createFeatures(networks);\n    if (!this.map.getSource(layer)) {\n      return;\n    }\n    this.map.getSource(layer).setData(featuresHome);\n  }\n\n  createFeatures(networks) {\n    const featuresHome = {\n      features: [],\n      type: 'FeatureCollection',\n    };\n\n    featuresHome.features = networks.map((network) => {\n\n      const newFeature = new Point(network);\n      return newFeature;\n    });\n    return featuresHome;\n  }\n\n  addClickListener() {\n    const {\n      bounds,\n      setBounds,\n    } = this.props;\n    const { map } = this;\n\n    map.on('click', () => {\n      setBounds(bounds);\n    });\n  }\n\n  addLayer(featuresHome) {\n    this.map.addLayer(\n      {\n        id: LAYER_NAME,\n        paint: {\n          'circle-color': '#11b4da',\n          'circle-opacity': 0.5,\n          'circle-radius': 4,\n          'circle-stroke-color': '#fff',\n          'circle-stroke-width': 1,\n        },\n        source: {\n          data: featuresHome,\n          type: 'geojson',\n        },\n        type: 'circle',\n      },\n      'district_interactive',\n    );\n  }\n\n\n  handleReset() {\n    this.removeHighlights();\n    // this.props.resetSelections();\n  }\n\n\n  initializeMap(featuresHome) {\n    const {\n      bounds,\n      mapId,\n    } = this.props;\n\n    mapboxgl.accessToken =\n        'pk.eyJ1IjoidG93bmhhbGxwcm9qZWN0IiwiYSI6ImNqMnRwOG4wOTAwMnMycG1yMGZudHFxbWsifQ.FXyPo3-AD46IuWjjsGPJ3Q';\n    const styleUrl = 'mapbox://styles/townhallproject/cjgr7qoqr00012ro4hnwlvsyp';\n\n    this.map = new mapboxgl.Map({\n      container: mapId,\n      doubleClickZoom: false,\n      dragPan: false,\n      scrollZoom: false,\n      style: styleUrl,\n    });\n\n    this.map.fitBounds(bounds, {\n      easeTo: { duration: 0 },\n      linear: true,\n    });\n    // map on 'load'\n    this.map.on('load', () => {\n      this.addClickListener();\n      this.addLayer(featuresHome);\n\n    });\n  }\n\n  render() {\n    const {\n      viewState,\n      mapId,\n    } = this.props;\n    const mapClassNames = classNames({\n      hidden: viewState === 'list',\n      inset: true,\n    });\n    return (\n      <React.Fragment>\n        <div id={mapId} className={mapClassNames} data-bounds={this.props.bounds} />\n      </React.Fragment>\n    );\n  }\n}\n\nMapInset.propTypes = {\n  bounds: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)).isRequired,\n  colorMap: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  networks: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  mapId: PropTypes.string.isRequired,\n  resetSelections: PropTypes.func.isRequired,\n  selectedState: PropTypes.string,\n  setUsState: PropTypes.func.isRequired,\n  stateName: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nMapInset.defaultProps = {\n  selectedState: '',\n};\n\nexport default MapInset;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { find, filter } from 'lodash';\nimport geoViewport from '@mapbox/geo-viewport';\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\n\nimport Point from './Point';\n\nimport MapInset from './MapInset';\nimport './style.scss';\nimport './popover.scss';\n\nexport const LAYER_NAME = 'networks-dots'\nconst mapboxgl = window.mapboxgl;\nclass MapView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.filterDistrict = ['any'];\n    this.includedStates = ['in', 'NAME'];\n\n    this.addPopups = this.addPopups.bind(this);\n    this.addClickListener = this.addClickListener.bind(this);\n    this.addLayer = this.addLayer.bind(this);\n    this.createFeatures = this.createFeatures.bind(this);\n    this.updateData = this.updateData.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.filterForStateInsets = this.filterForStateInsets.bind(this);\n    this.insetOnClickEvent = this.insetOnClickEvent.bind(this);\n    this.handleClickOnInset = this.handleClickOnInset.bind(this);\n    this.state = {\n      alaskanetworks: filter(this.props.networks, { state: 'AK' }),\n      hawaiinetworks: filter(this.props.networks, { state: 'HI' }),\n      popoverColor: 'popover-general-icon',\n    };\n  }\n\n  componentDidMount() {\n    const { networks } = this.props;\n    const featuresHome = this.createFeatures(networks);\n    this.initializeMap(featuresHome);\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      networks,\n    } = prevProps;\n    this.map.resize();\n    if (networks.length !== this.props.networks.length) {\n      this.updateData(this.props.networks)\n    }\n    if (prevProps.viewState !== this.props.viewState) {\n      if (this.props.viewState === 'default') {\n        this.setInitialState();\n      }\n\n    }\n  }\n\n  filterForStateInsets(networks) {\n    const alaskanetworks = filter(networks, { state: 'AK' });\n    const hawaiinetworks = filter(networks, { state: 'HI' });\n    this.setState({\n      alaskanetworks,\n      hawaiinetworks,\n    });\n  }\n\n  insetOnClickEvent(e) {\n    this.setState({ inset: false });\n    const dataBounds = e.target.parentNode.parentNode.getAttribute('data-bounds').split(',');\n    const boundsOne = [Number(dataBounds[0]), Number(dataBounds[1])];\n    const boundsTwo = [Number(dataBounds[2]), Number(dataBounds[3])];\n    const bounds = boundsOne.concat(boundsTwo);\n    this.map.fitBounds(bounds);\n  }\n\n  updateData(networks) {\n    const featuresHome = this.createFeatures(networks);\n    this.map.fitBounds([[-128.8, 23.6], [-65.4, 50.2]]);\n    if (!this.map.getSource(LAYER_NAME)) {\n      return;\n    }\n    this.map.getSource(LAYER_NAME).setData(featuresHome);\n  }\n\n  createFeatures(networks) {\n    const featuresHome = {\n      features: [],\n      type: 'FeatureCollection',\n    };\n    featuresHome.features = networks.map((network) => {\n      const newFeature = new Point(network);\n      return newFeature;\n    });\n    return featuresHome;\n  }\n\n  addPopups(layer) {\n    const { map } = this;\n\n    const popup = new mapboxgl.Popup({\n      closeButton: true,\n      closeOnClick: true,\n    });\n\n    map.on('mousemove', (e) => {\n      const features = map.queryRenderedFeatures(e.point, { layers: [layer] });\n      // Change the cursor style as a UI indicator.\n      map.getCanvas().style.cursor = (features.length) ? 'pointer' : '';\n\n      if (features.length) {\n        const feature = features[0];\n        const { properties } = feature;\n\n        this.setState({\n          popoverColor: `popover-${feature.properties.category}`\n        });\n        const link = properties.form ? `<a href=${properties.form}>Link to form</a>` : `<a href=${properties.socials}>Link to group</a>`;\n        return popup.setLngLat(feature.geometry.coordinates)\n          .setHTML(`\n            <h4>${properties.title}</h4>\n            <div>${link}</div>`)\n \n          .addTo(map);\n      }\n      return undefined;\n    });\n  }\n\n  addClickListener() {\n\n    const { map } = this;\n    const {\n      setViewState,\n      setLatLng\n    } = this.props;\n\n    map.on('click', (e) => {\n      const features = map.queryRenderedFeatures(\n        e.point,\n        {\n          layers: [LAYER_NAME],\n        },\n      );\n\n      if (features.length > 0) {\n        let bbox = JSON.parse(features[0].properties.bbox);\n        setViewState('list');\n        setLatLng({lat: features[0].properties.lat, lng: features[0].properties.lng})\n        map.fitBounds(bbox);\n      }\n    });\n  }\n\n  addLayer(featuresHome) {\n    this.map.addLayer(\n      {\n        id: LAYER_NAME,\n        paint: {\n          'circle-opacity': 0.5,\n          'circle-radius': [\n            'interpolate', ['linear'],\n            ['number', ['get', 'scale'], 5],\n              1,\n              5,\n              70,\n              70\n          ], \n          'circle-stroke-color': '#fff',\n          'circle-stroke-width': 1,\n          'circle-color': [\n            'match',\n            ['get', 'category'],\n            'Support Request',\n            '#ef4822',\n            'Support Offer',\n            '#6ac1e5',\n            'General',\n            '#8048f3',\n            /* other */\n            '#057A8F'\n          ]\n        },\n        source: {\n          data: featuresHome,\n          type: 'geojson',\n        },\n        type: 'circle',\n      },\n      'district_interactive',\n    );\n  }\n\n\n  handleReset() {\n    const {\n      setViewState\n    } = this.props;\n\n  \n    setViewState('default');\n  }\n\n  setInitialState() {\n    this.map.fitBounds([\n      [-128.8, 23.6],\n      [-65.4, 50.2]\n    ]);\n    this.map.resize();\n  }\n\n  handleClickOnInset(bounds) {\n    // this is for clicking on a state inset\n    this.props.setViewState('list');\n    this.map.resize();\n\n    this.map.fitBounds(bounds);\n    this.map.resize();\n\n    const mbBounds = new mapboxgl.LngLatBounds(bounds);\n    const center = mbBounds.getCenter();\n    this.props.setLatLng(center)\n  }\n\n  // Creates the button in our zoom controls to go to the national view\n  makeZoomToNationalButton() {\n    document.querySelector('.mapboxgl-ctrl-compass').remove();\n    if (document.querySelector('.mapboxgl-ctrl-usa')) {\n      document.querySelector('.mapboxgl-ctrl-usa').remove();\n    }\n    const usaButton = document.createElement('button');\n    usaButton.className = 'mapboxgl-ctrl-icon mapboxgl-ctrl-usa';\n    usaButton.innerHTML = '<span class=\"usa-icon\"></span>';\n\n    usaButton.addEventListener('click', this.handleReset);\n    document.querySelector('.mapboxgl-ctrl-group').appendChild(usaButton);\n  }\n\n  initializeMap(featuresHome) {\n    const {\n      setViewState,\n      setLatLng\n    } = this.props;\n\n    mapboxgl.accessToken =\n      'pk.eyJ1IjoidG93bmhhbGxwcm9qZWN0IiwiYSI6ImNqMnRwOG4wOTAwMnMycG1yMGZudHFxbWsifQ.FXyPo3-AD46IuWjjsGPJ3Q';\n    const styleUrl = 'mapbox://styles/townhallproject/cjgr7qoqr00012ro4hnwlvsyp';\n\n    this.map = new mapboxgl.Map({\n      container: 'map',\n      style: styleUrl,\n    });\n\n    // Set Mapbox map controls\n    this.map.addControl(new mapboxgl.NavigationControl());\n    this.map.scrollZoom.disable();\n    this.map.dragRotate.disable();\n    this.map.touchZoomRotate.disableRotation();\n    this.makeZoomToNationalButton();\n    const { map } = this;\n    this.map.addControl(\n      new MapboxGeocoder({\n        accessToken: mapboxgl.accessToken,\n        mapboxgl: mapboxgl,\n        countries: 'us',\n        marker: false,\n        zoom: 12,\n      })\n      .on('clear', function (result) {\n        setViewState('default');\n      })\n      .on('result', function (returned) {\n        setViewState('list');\n        map.fitBounds(returned.result.bbox);\n        setLatLng({\n          lat: returned.result.center[1],\n          lng: returned.result.center[0]\n        })\n      }),\n      'top-left'\n    );\n    // map on 'load'\n    this.map.on('load', () => {\n      this.map.fitBounds([[-128.8, 23.6], [-65.4, 50.2]]);\n      this.addClickListener();\n      this.addLayer(featuresHome);\n      this.addPopups(LAYER_NAME);\n      // this.map.getSource(LAYER_NAME).setData(featuresHome);\n    });\n  }\n\n  render() {\n    const {\n      center,\n      resetSelections,\n      setLatLng,\n      setUsState,\n      viewState,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <div id=\"map\" className={this.state.popoverColor}>\n          <div className=\"map-overlay\" id=\"legend\">\n            <MapInset\n              networks={this.state.alaskanetworks}\n              center={center}\n              stateName=\"AK\"\n              viewState={viewState}\n              resetSelections={resetSelections}\n              setLatLng={setLatLng}\n              setBounds={this.handleClickOnInset}\n              mapId=\"map-overlay-alaska\"\n              bounds={[[-170.15625, 51.72702815704774], [-127.61718749999999, 71.85622888185527]]}\n            />\n            <MapInset\n              networks={this.state.hawaiinetworks}\n              stateName=\"HI\"\n              center={center}\n              viewState={viewState}\n              resetSelections={resetSelections}\n              setLatLng={setLatLng}\n              setBounds={this.handleClickOnInset}\n              mapId=\"map-overlay-hawaii\"\n              bounds={[\n                [-161.03759765625, 18.542116654448996],\n                [-154.22607421875, 22.573438264572406]]}\n            />\n          </div>\n        </div>\n\n      </React.Fragment>\n    );\n  }\n}\n\nMapView.propTypes = {\n  networks: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  setLatLng: PropTypes.func.isRequired,\n};\n\nMapView.defaultProps = {\n\n};\n\nexport default MapView;\n","import React from 'react';\nimport { Button } from 'antd';\nimport './style.scss';\n\nconst SubmitNetwork = () => {\n  return (\n      <div className=\"start-network-container\">\n        <Button \n          id=\"start-network-button\" \n          target=\"_blank\" \n          href=\"https://docs.google.com/forms/d/1Orat2boOrd7dqmWD4LS1yJd5QwK_kSn05OS9BghJKTk/edit?usp=sharing\">\n            Submit a Mutual Aid Network\n        </Button>\n      </div>\n  )\n};\n\nexport default SubmitNetwork;","import React from \"react\";\nimport { Checkbox } from 'antd';\n\nimport { options }  from '../../state/selections/reducers';\n\nimport './style.scss';\n\nconst CheckboxGroup = Checkbox.Group;\n\nclass Filters extends React.Component {\n    state = {\n        // checkedList: this.props.selectedCategories,\n        indeterminate: false,\n        checkAll: true,\n    };\n\n    onChange = checkedList => {\n        \n        this.props.setFilters(checkedList);\n        this.setState({\n            indeterminate: !!checkedList.length && checkedList.length < options.length,\n            checkAll: checkedList.length === options.length,\n        });\n    };\n\n    onCheckAllChange = e => {\n        const checkedList = e.target.checked ? options : [];\n        this.setState({\n            indeterminate: false,\n            checkAll: e.target.checked,\n        });\n        this.props.setFilters(checkedList);\n    };\n\n    render() {\n        return (\n            <div className=\"filter-container\">\n                <div className=\"site-checkbox-all-wrapper\">\n                    <Checkbox\n                        indeterminate={this.state.indeterminate}\n                        onChange={this.onCheckAllChange}\n                        checked={this.state.checkAll}\n                    >\n                        Select all\n                    </Checkbox>\n                </div>\n                <br />\n                <CheckboxGroup\n                    value={this.props.selectedCategories}\n                    onChange={this.onChange}\n                >\n                    {options.map((ele) => <Checkbox className={ele.replace(' ', '-').toLowerCase()} value={ele}>{ele}</Checkbox>)}\n                </CheckboxGroup>\n            </div>\n        );\n    }\n}\n\nexport default Filters;","import React from 'react';\nimport {\n  Card,\n  Row\n} from 'antd';\nimport './style.scss';\n\n\nconst NetworkCard = (props) => {\n\n  const parseNetworks = (networks) => {\n    return networks.map(network => {\n      const {\n        address,\n        title,\n        neighborhood,\n        form,\n        social,\n        category,\n        community,\n        language\n      } = network\n      return (\n        <Card\n          className='network-card'\n          title={title}\n          extra={\n            <ul className='list-inline'>\n            {category && <li>{category}</li>}\n            {community && <li>{community}</li>}\n          </ul>\n          }\n        >\n          <ul className='list-inline'>\n            {neighborhood && <li>{neighborhood}</li>}\n            {address && <li>{address}</li>}\n            {language && <li>{language}</li>}\n          </ul>\n          <Row justify=\"space-between\">\n            {form && <a href={form} target=\"_blank\" className=\"button\">Participate in this community</a>}\n            {social && <a href={social} target=\"_blank\" className=\"button\">Join social media</a>}\n          </Row>\n        </Card>\n      )\n    })\n  }\n\n  return (\n    <>\n      {parseNetworks(props.networks)}\n    </>\n  )\n}\n\nexport default NetworkCard\n","import React from 'react';\nimport { Button, Table } from 'antd';\nimport NetworkCard from '../NetworkCard'\n\nconst ListView = ({ visibleCards }) => {\n  const noNetworkMessage = 'There are no support requests or networks nearby.'\n  return (\n      <div className=\"list-container\">\n        {\n          visibleCards.length ? <NetworkCard networks={visibleCards} /> : noNetworkMessage\n        }\n      </div>\n  )\n};\n\nexport default ListView;","import React from 'react';\nimport {\n  connect\n} from 'react-redux';\nimport { Layout, Menu } from 'antd';\n\nimport networkStateBranch from '../state/networks';\nimport selectionStateBranch from '../state/selections';\nimport MapView from '../components/Map';\nimport SubmitNetwork from '../components/SubmitNetwork';\nimport Filters from '../components/Filters';\nimport ListView from '../components/ListView';\n\nimport './style.scss';\n\nconst { Header, Content, Footer } = Layout;\n\nclass DefaultLayout extends React.Component {\n  componentDidMount() {\n    const {\n      requestNetworks\n    } = this.props;\n    requestNetworks();\n  }\n  render() {\n    const {\n      setFilters,\n      selectedCategories,\n      filteredNetworks,\n      setViewState,\n      viewState,\n      setLatLng,\n      visibleCards,\n      allNetworks,\n    } = this.props;\n    \n    if (!allNetworks.length) {\n      return null;\n    }\n    // viewState --> list or default\n    return (\n      <Layout className=\"layout\">\n        <Header>\n          <div className=\"logo\">Mutual Aid Hub</div>\n          <Menu\n            theme=\"dark\"\n            mode=\"horizontal\"\n            style={{ lineHeight: '64px' }}\n          >\n            <Menu.Item key=\"1\">Guides and other resources</Menu.Item>\n          </Menu>\n        </Header>\n        <Content style={{ padding: '0 50px' }}>\n          <div className=\"main-container\">\n            <Filters \n              setFilters={setFilters}\n              selectedCategories={selectedCategories}\n            />\n            <div className={`interactive-content-${viewState}`}>\n              <MapView\n                setViewState={setViewState}\n                networks={filteredNetworks}\n                viewState={viewState}\n                setLatLng={setLatLng}\n              />\n              <ListView \n                visibleCards={visibleCards}\n              />\n            </div>\n            <div className=\"tagline\">Find Mutual Aid Networks and other community self-support projects near you. Join these important efforts, offer resources, or submit needs requests.</div>\n            <SubmitNetwork />\n          </div>\n        </Content>\n        <Footer style={{ textAlign: 'center' }}>\n          <div class=\"footer-text\">\n            We list these networks as a public resource. We cannot verify or vouch for any network or individual offerings. Please exercise all necessary judgement when interacting with community members not previously known to you.\n          </div>\n        </Footer>\n      </Layout>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  filteredNetworks: networkStateBranch.selectors.getFilteredNetworks(state),\n  selectedCategories: selectionStateBranch.selectors.getSelectedCategories(state),\n  viewState: selectionStateBranch.selectors.getViewState(state),\n  searchLocation: selectionStateBranch.selectors.getSearchLocation(state),\n  visibleCards: networkStateBranch.selectors.getVisibleCards(state),\n  allNetworks: networkStateBranch.selectors.getAllNetworks(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  requestNetworks: () => dispatch(networkStateBranch.actions.requestNetworks()),\n  setFilters: (payload) => dispatch(selectionStateBranch.actions.setCategoryFilters(payload)),\n  setViewState: (payload) => dispatch(selectionStateBranch.actions.setViewState(payload)),\n  setLatLng: (payload) => dispatch(selectionStateBranch.actions.setLatLng(payload))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DefaultLayout);\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport configureStore from './state/store';\n// Containers\nimport DefaultLayout from './containers/DefaultLayout';\nimport './index.css';\n\n// Bootstrap the store\nvar Store = configureStore();\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={Store}>\n        <DefaultLayout />\n      </Provider>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}