{"version":3,"sources":["serviceWorker.js","utils/index.js","state/networks/reducers.js","state/networks/actions.js","state/selections/selectors.js","state/networks/selectors.js","state/networks/index.js","state/networks/logic.js","state/constants/index.js","state/selections/reducers.js","state/selections/actions.js","state/selections/index.js","state/selections/logic.js","utils/firebaseinit.js","state/store.js","components/Map/Point.js","components/Map/constants.js","components/Map/MapInset.js","components/Map/index.js","components/SubmitNetwork/index.jsx","components/Filters/index.jsx","components/NetworkCard/index.js","components/ListView/index.js","components/NoWebGl/index.jsx","containers/DefaultLayout.js","index.js"],"names":["Boolean","window","location","hostname","match","makeConstant","branchOfState","actionType","REQUEST_NETWORKS","SET_NETWORKS","REQUEST_FAILED","SET_PAGE_OF_NETWORKS","initialState","allNetworks","eventReducer","state","type","payload","error","console","log","requestNetworks","setPageOfNetworks","getSelectedCategories","selections","categories","getSearchLocation","searchLocation","getHoveredPointId","hoveredPointId","getViewState","createSelector","lat","mapboxgl","getAllNetworks","networks","getFilteredNetworks","length","filter","network","includes","category","getNetworksInArea","lookup","LatLng","Number","lng","currentEvent","computeDistanceBetween","sort","a","b","getVisibleCards","filteredNetworks","getBoundingBox","cards","reduce","acc","cur","index","extend","LngLatBounds","bbox","actions","logics","createLogic","process","deps","dispatch","done","httpClient","get","then","snapshot","body","nextPageToken","requestPage","token","pageOfNetworks","documents","map","doc","data","fields","unpackedData","mapValues","object","newValues","values","obj","generalForm","supportRequestForm","supportOfferForm","id","reducers","selectors","SET_CATEGORY_FILTERS","SET_LAT_LNG","SET_HOVERED_POINT","options","view","language","community","setCategoryFilters","setLatLng","setHoveredPoint","action","PREFIX","config","apiKey","authDomain","databaseURL","storageBucket","messagingSenderId","projectId","firebase","initializeApp","firebasedb","database","firestore","reduxLogicDependencies","firebaseUrl","request","logicMiddleware","createLogicMiddleware","middleware","applyMiddleware","Point","jitterSide","jitterUp","this","geometry","coordinates","scale","properties","region","contact","socials","social","facebookPage","city","title","LAYER_NAME","accessToken","mapboxStyle","MapInset","props","addClickListener","bind","addLayer","createFeatures","updateData","featuresHome","initializeMap","prevProps","getSource","stateName","setData","features","bounds","setBounds","on","paint","source","mapId","Map","container","doubleClickZoom","dragPan","scrollZoom","style","fitBounds","easeTo","duration","linear","viewState","mapClassNames","classNames","hidden","inset","Fragment","className","data-bounds","React","Component","defaultProps","selectedState","MapView","filterDistrict","includedStates","addPopups","handleReset","insetOnClickEvent","handleClickOnInset","popoverColor","resize","hoveredPopup","remove","setInitialState","setState","hoverPoint","unHoverPoint","e","dataBounds","target","parentNode","getAttribute","split","boundsOne","boundsTwo","concat","padding","top","bottom","left","right","maxZoom","layer","Popup","closeButton","closeOnClick","queryRenderedFeatures","point","layers","getCanvas","cursor","link","feature","popoverClassName","join","toLowerCase","setLngLat","setHTML","addTo","hoveredPinId","setFeatureState","hover","document","getElementsByClassName","Array","from","forEach","ele","value","center","getCenter","querySelector","usaButton","createElement","innerHTML","addEventListener","appendChild","addControl","NavigationControl","disable","dragRotate","touchZoomRotate","disableRotation","makeZoomToNationalButton","MapboxGeocoder","countries","marker","zoom","flyTo","result","returned","resetSelections","SubmitNetwork","href","CheckboxGroup","Group","Filters","indeterminate","checkAll","onChange","checkedList","setFilters","onCheckAllChange","checked","visible","absolute","selectedCategories","key","replace","NetworkCard","address","neighborhood","onMouseEnter","onMouseLeave","extra","justify","rel","Title","NoNetworkSection","level","InfoCircleOutlined","ListView","visibleCards","class","Header","Content","Footer","DefaultLayout","masterBbox","theme","mode","lineHeight","supported","NoWebGl","textAlign","connect","networkStateBranch","selectionStateBranch","Store","createStore","combineReducers","App","store","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.54835882.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const makeConstant = (branchOfState, actionType) => `${branchOfState}-${actionType}`;\n\n","import {\n  makeConstant\n} from \"../../utils\";\nconst STATE_BRANCH = 'EVENTS';\n\nexport const REQUEST_NETWORKS = makeConstant(STATE_BRANCH, \"REQUEST_NETWORKS\");\nexport const SET_NETWORKS = makeConstant(STATE_BRANCH, \"SET_NETWORKS\");\nexport const REQUEST_FAILED = makeConstant(STATE_BRANCH, \"REQUEST_FAILED\");\nexport const SET_PAGE_OF_NETWORKS = makeConstant(STATE_BRANCH, \"SET_PAGE_OF_NETWORKS\");\n\nconst initialState = {\n  allNetworks: [],\n};\n\n\nconst eventReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case SET_NETWORKS:\n      return {\n        ...state,\n        allNetworks: payload,\n        error: null\n      };\n    case SET_PAGE_OF_NETWORKS:\n      return {\n        ...state,\n        allNetworks: [...state.allNetworks, ...payload],\n        error: null\n      };\n    case REQUEST_FAILED:\n      console.log(`REQUEST_FAILED: ${payload}`);\n      return {\n        ...state,\n        error: payload\n      };\n     default:\n      return state;\n  }\n};\n\nexport default eventReducer;","import {\n  REQUEST_NETWORKS, SET_PAGE_OF_NETWORKS,\n} from './reducers';\n\n\nexport const requestNetworks = () => ({\n  type: REQUEST_NETWORKS,\n});\n\nexport const setPageOfNetworks = (payload) => ({\n  type: SET_PAGE_OF_NETWORKS,\n  payload\n})","import { createSelector } from 'reselect';\n\nexport const getSelectedCategories = (state) => state.selections.categories;\n// export const getViewState = state => state.selections.view;\nexport const getSearchLocation = state => state.selections.searchLocation;\nexport const getHoveredPointId = state => state.selections.hoveredPointId;\n\nexport const getViewState = createSelector([getSearchLocation], (searchLocation) => {\n    if (searchLocation.lat) {\n        return 'list';\n    }\n    return 'default';\n})","import { createSelector } from 'reselect';\nimport { filter } from 'lodash';\nimport {\n    computeDistanceBetween,\n    LatLng\n} from 'spherical-geometry-js';\n\nimport { getSelectedCategories, getSearchLocation } from '../selections/selectors';\nconst mapboxgl = window.mapboxgl;\n\nexport const getAllNetworks = state => state.networks.allNetworks;\n\nexport const getFilteredNetworks = createSelector([getAllNetworks, getSelectedCategories], (networks, categories) => {\n    if (!categories.length) {\n        return [];\n    }\n    return filter(networks, (network) => {\n        return categories.includes(network.category)\n    })\n})\n\nexport const getNetworksInArea = createSelector([getAllNetworks, getSearchLocation], (allNetworks, location) => {\n            if (!location.lat) {\n                return [];\n            }\n            const lookup = new LatLng(Number(location.lat), Number(location.lng));\n            const maxMeters = 50 * 1609.34; // Convert miles to meters before filtering\n            return allNetworks.filter((currentEvent) => {\n                const curDistance = computeDistanceBetween(\n                    lookup,\n                    new LatLng(Number(currentEvent.lat), Number(currentEvent.lng)),\n                );\n                return curDistance < maxMeters;\n            }).sort((a, b) => {\n                const aDistance = computeDistanceBetween(\n                    lookup,\n                    new LatLng(Number(a.lat), Number(a.lng)),\n                );\n                const bDistance = computeDistanceBetween(\n                    lookup,\n                    new LatLng(Number(b.lat), Number(b.lng)),\n                );\n                return aDistance - bDistance;\n            });\n    \n})\n\nexport const getVisibleCards = createSelector(\n    [\n        getFilteredNetworks,\n        getSearchLocation,\n    ],\n    (\n        filteredNetworks,\n        location,\n    ) => {\n        if (!location.lat) {\n            return [];\n        }\n        const lookup = new LatLng(Number(location.lat), Number(location.lng));\n        const maxMeters = 50 * 1609.34; // Convert miles to meters before filtering\n        return filteredNetworks.filter((currentEvent) => {\n            const curDistance = computeDistanceBetween(\n                lookup,\n                new LatLng(Number(currentEvent.lat), Number(currentEvent.lng)),\n            );\n            return curDistance < maxMeters;\n        }).sort((a, b) => {\n            const aDistance = computeDistanceBetween(\n                lookup,\n                new LatLng(Number(a.lat), Number(a.lng)),\n            );\n            const bDistance = computeDistanceBetween(\n                lookup,\n                new LatLng(Number(b.lat), Number(b.lng)),\n            );\n            return aDistance - bDistance;\n        });\n    },\n);\n\nexport const getBoundingBox = createSelector([getNetworksInArea], (cards) => {\n    if (!cards.length) {\n        return null;\n    }\n    return cards.reduce((acc, cur, index) => {\n        if (index > 0) {\n        \n            acc = acc.extend(cur);\n        }\n        return acc;\n    }, new mapboxgl.LngLatBounds(cards[0].bbox));\n})","import * as actions from \"./actions\";\nimport reducers from \"./reducers\";\nimport * as selectors from \"./selectors\";\nimport logics from \"./logic\";\n\nexport default {\n    actions,\n    logics,\n    reducers,\n    selectors,\n};","import {\n  createLogic\n} from \"redux-logic\";\nimport {\n  mapValues,\n  values,\n  map,\n} from 'lodash';\nimport {\n  REQUEST_NETWORKS,\n} from \"./reducers\";\nimport { GENERAL, REQUEST_SUPPORT, OFFER_SUPPORT, INFORMATION } from \"../constants\";\nimport { setPageOfNetworks } from \"./actions\";\n\nconst fetchNetworks = createLogic({\n  type: REQUEST_NETWORKS,\n\n  process(deps, dispatch, done) {\n    const {\n      httpClient,\n    } = deps;\n\n    const requestPage = (token) => {\n      return httpClient.get(`https://firestore.googleapis.com/v1/projects/townhallproject-86312/databases/(default)/documents/mutual_aid_networks/?pageToken=${token}`)\n         .then((snapshot) => {\n               const pageOfNetworks = snapshot.body.documents.map((doc, index) => {\n                 const data = doc.fields;\n                 const unpackedData = mapValues(data, (object) => {\n                   let newValues = values(object)[0];\n                   if (newValues.values) {\n                     newValues = map(newValues.values, obj => {\n                       return values(obj)[0];\n                     });\n                   }\n                   return newValues;\n                 })\n                 let category;\n                 if (unpackedData.generalForm || (unpackedData.supportRequestForm && unpackedData.supportOfferForm)) {\n                   category = GENERAL;\n                 } else if (unpackedData.supportRequestForm) {\n                   category = REQUEST_SUPPORT;\n                 } else if (unpackedData.supportOfferForm) {\n                   category = OFFER_SUPPORT;\n                 } else {\n                   category = INFORMATION;\n                 }\n                 return {\n                   ...unpackedData,\n                   id: index,\n                   category: category,\n                 }\n               });\n               dispatch(setPageOfNetworks(pageOfNetworks))\n               if (snapshot.body.nextPageToken) {\n                  return requestPage(snapshot.body.nextPageToken)\n               }\n               done();\n              })\n            }\n    \n    return httpClient.get('https://firestore.googleapis.com/v1/projects/townhallproject-86312/databases/(default)/documents/mutual_aid_networks/')\n      .then((snapshot) => {\n        if (snapshot.body.nextPageToken) {\n          return requestPage(snapshot.body.nextPageToken);\n        }\n        return done();\n      })\n  }\n})\n\n\nexport default [\n  fetchNetworks,\n];","export const firebaseUrl = process.env.NODE_ENV === \"production\" ? process.env.REACT_APP_PROD_DATABASE_URL : process.env.REACT_APP_TESTING_DATABASE_URL;\nexport const GENERAL = 'General';\nexport const OFFER_SUPPORT = 'Offer Support';\nexport const REQUEST_SUPPORT = 'Request Support';\nexport const INFORMATION = 'Community';\n","import {\n  makeConstant\n} from \"../../utils\";\nimport { GENERAL, REQUEST_SUPPORT, OFFER_SUPPORT, INFORMATION } from \"../constants\";\n\nconst STATE_BRANCH = 'SELECTIONS';\nexport const SET_CATEGORY_FILTERS = makeConstant(STATE_BRANCH, 'FILTER_BY_CATEGORY');\nexport const SET_LAT_LNG = makeConstant(STATE_BRANCH, 'SET_LAT_LNG');\nexport const SET_HOVERED_POINT = makeConstant(STATE_BRANCH, 'SET_HOVERED_POINT');\n\nexport const options = [GENERAL, REQUEST_SUPPORT, OFFER_SUPPORT, INFORMATION];\n\nconst initialState = {\n  view: 'default',\n  categories: options,\n  language: '',\n  community: '',\n  searchLocation: {},\n  hoveredPointId: null,\n};\n\nconst selectionReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_CATEGORY_FILTERS:\n      return {\n        ...state,\n        categories: action.payload,\n      }\n      case SET_LAT_LNG:\n        return {\n          ...state,\n          searchLocation: action.payload,\n        }\n      case SET_HOVERED_POINT: \n        return {\n          ...state,\n          hoveredPointId: action.payload,\n        }\n        default:\n          return state;\n  }\n};\n\nexport default selectionReducer;","import {\n    SET_CATEGORY_FILTERS,\n    SET_LAT_LNG,\n    SET_HOVERED_POINT\n} from \"./reducers\";\n\nexport const setCategoryFilters = (payload) => ({\n    type: SET_CATEGORY_FILTERS,\n    payload\n});\n\nexport const setLatLng = (payload) => ({\n    type: SET_LAT_LNG,\n    payload,\n});\n\nexport const setHoveredPoint = (payload) => ({\n    type: SET_HOVERED_POINT,\n    payload,\n});","import * as actions from \"./actions\";\nimport reducers from \"./reducers\";\nimport * as selectors from \"./selectors\";\nimport logics from \"./logic\";\n\nexport default {\n    actions,\n    logics,\n    reducers,\n    selectors,\n};","// import { createLogic } from \"redux-logic\"\n\n\nexport default [];","// FIREBASE METHODS\n// Initialize Firebase\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/firestore';\n\nconst PREFIX = process.env.NODE_ENV === \"production\" ? \"REACT_APP_PROD\" : \"REACT_APP_TESTING\";\n\nif (process.env.NODE_ENV !== \"production\") {\n  console.log(process.env[`${PREFIX}_PROJECT_ID`]);\n}\n\nconst config = {\n  apiKey: process.env[`${PREFIX}_FIREBASE_API_KEY`],\n  authDomain: process.env[`${PREFIX}_FIREBASE_AUTH_DOMAIN`],\n  databaseURL: process.env[`${PREFIX}_DATABASE_URL`],\n  storageBucket: process.env[`${PREFIX}_STORAGE_BUCKET`],\n  messagingSenderId: process.env[`${PREFIX}_MESSAGING_SENDER_ID`],\n  projectId: process.env[`${PREFIX}_PROJECT_ID`],\n};\n\nfirebase.initializeApp(config);\nexport const firebasedb = firebase.database();\nexport const firestore = firebase.firestore();\n\nexport default firebase;","import { applyMiddleware, createStore, combineReducers } from 'redux';\nimport { createLogicMiddleware } from 'redux-logic';\nimport request from 'superagent';\n\nimport networks from './networks';\nimport selections from './selections';\n\n\nimport { firebaseUrl } from '../state/constants';\nimport {\n  firebasedb,\n  firestore,\n} from '../utils/firebaseinit';\n\nconst reducers = {\n  networks: networks.reducers,\n  selections: selections.reducers,\n};\n\nconst logics = [\n  ...networks.logics,\n  ...selections.logics,\n];\n\nconst reduxLogicDependencies = {\n  firebaseUrl: firebaseUrl,\n  firebasedb,\n  firestore,\n  httpClient: request,\n};\n\nconst logicMiddleware = createLogicMiddleware(logics, reduxLogicDependencies);\n\nlet middleware = applyMiddleware(\n  logicMiddleware\n);\n\nif (process.env.NODE_ENV === `development` && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) {\n  middleware = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__(middleware);\n}\n\nexport default () => {\n  const store = createStore(\n    combineReducers(reducers),\n    middleware\n  );\n\n  return store;\n};","class Point {\n    constructor(network) {\n        const jitterSide = Number(network.id) % 2 ? - (Number(network.id) % 2) * 0.008 : (Number(network.id) % 2) * 0.008;\n        const jitterUp = !Number(network.id) % 2 ? - (Number(network.id) % 3) * 0.008 : (Number(network.id) % 3) * 0.008;\n        this.type = 'Feature';\n        this.geometry = {\n            coordinates: [Number(network.lng + jitterUp), Number(network.lat) + jitterSide],\n            type: 'Point',\n        };\n        const scale = network.bbox[3] - network.bbox[1];\n        this.properties = {\n            region: network.region,\n            contact: network.contact || null,\n            socials: network.social || null,\n            facebookPage: network.facebookPage,\n            state: network.state,\n            city: network.city,\n            title: network.title,\n            generalForm: network.generalForm,\n            supportRequestForm: network.supportRequestForm,\n            supportOfferForm: network.supportOfferForm,\n            category: network.category,\n            bbox: network.bbox,\n            lat: network.lat,\n            lng: network.lng,\n            scale: scale * 10,\n        };\n        this.id = network.id;\n    }\n}\n\nexport default Point;\n","export const LAYER_NAME = 'networks-dots'\nexport const accessToken = process.env.REACT_APP_MAPBOX_API_KEY;\nexport const mapboxStyle = process.env.REACT_APP_MAPBOX_STYLE_URL;","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Point from './Point';\nimport {\n  LAYER_NAME, \n  accessToken,\n  mapboxStyle\n} from './constants';\n\nconst mapboxgl = window.mapboxgl;\n\nclass MapInset extends React.Component {\n  constructor(props) {\n    super(props);\n    this.addClickListener = this.addClickListener.bind(this);\n    this.addLayer = this.addLayer.bind(this);\n    this.createFeatures = this.createFeatures.bind(this);\n    this.updateData = this.updateData.bind(this);\n\n  }\n\n  componentDidMount() {\n    const { networks } = this.props;\n    const featuresHome = this.createFeatures(networks);\n    this.initializeMap(featuresHome);\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      networks,\n    } = prevProps;\n\n    if (networks.length !== this.props.networks.length) {\n      this.updateData(networks);\n    }\n  }\n\n  updateData(networks) {\n    const featuresHome = this.createFeatures(networks);\n    if (!this.map.getSource(`${LAYER_NAME}-${this.props.stateName}`)) {\n      return;\n    }\n    this.map.getSource(`${LAYER_NAME}-${this.props.stateName}`).setData(featuresHome);\n  }\n\n  createFeatures(networks) {\n    const featuresHome = {\n      features: [],\n      type: 'FeatureCollection',\n    };\n    featuresHome.features = networks.map((network) => {\n\n      const newFeature = new Point(network);\n      return newFeature;\n    });\n    return featuresHome;\n  }\n\n  addClickListener() {\n    const {\n      bounds,\n      setBounds,\n    } = this.props;\n    const { map } = this;\n\n    map.on('click', () => {\n      setBounds(bounds);\n    });\n  }\n\n  addLayer(featuresHome) {\n    this.map.addLayer(\n      {\n        id: `${LAYER_NAME}-${this.props.stateName}`,\n        paint: {\n          'circle-opacity': 0.5,\n          'circle-radius': 7,\n          'circle-stroke-color': '#fff',\n          'circle-stroke-width': 1,\n          'circle-color': [\n            'match',\n            ['get', 'category'],\n            'Support Request',\n            '#ef4822',\n            'Support Offer',\n            '#6ac1e5',\n            'General',\n            '#8048f3',\n            /* other */\n            '#057A8F'\n          ]\n        },\n        source: {\n          data: featuresHome,\n          type: 'geojson',\n        },\n        type: 'circle',\n      },\n      'district_interactive',\n    );\n  }\n\n  initializeMap(featuresHome) {\n    const {\n      bounds,\n      mapId,\n    } = this.props;\n\n    mapboxgl.accessToken =\n        accessToken;\n\n    this.map = new mapboxgl.Map({\n      container: mapId,\n      doubleClickZoom: false,\n      dragPan: false,\n      scrollZoom: false,\n      style: mapboxStyle,\n    });\n\n    this.map.fitBounds(bounds, {\n      easeTo: { duration: 0 },\n      linear: true,\n    });\n    // map on 'load'\n    this.map.on('load', () => {\n      this.addClickListener();\n      this.addLayer(featuresHome);\n\n    });\n  }\n\n  render() {\n    const {\n      viewState,\n      mapId,\n    } = this.props;\n    const mapClassNames = classNames({\n      hidden: viewState === 'list',\n      inset: true,\n    });\n    return (\n      <React.Fragment>\n        <div id={mapId} className={mapClassNames} data-bounds={this.props.bounds} />\n      </React.Fragment>\n    );\n  }\n}\n\nMapInset.propTypes = {\n  bounds: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)).isRequired,\n  networks: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  mapId: PropTypes.string.isRequired,\n  stateName: PropTypes.string.isRequired,\n};\n\nMapInset.defaultProps = {\n  selectedState: '',\n};\n\nexport default MapInset;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { filter } from 'lodash';\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\n\nimport Point from './Point';\n\nimport MapInset from './MapInset';\nimport './style.scss';\nimport './popover.scss';\nimport './popovertip.scss';\nimport './popover_implementation.scss';\nimport { LAYER_NAME, accessToken, mapboxStyle } from './constants';\nimport { REQUEST_SUPPORT, OFFER_SUPPORT, GENERAL } from '../../state/constants';\n\nconst mapboxgl = window.mapboxgl;\n\nclass MapView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.filterDistrict = ['any'];\n    this.includedStates = ['in', 'NAME'];\n\n    this.addPopups = this.addPopups.bind(this);\n    this.addClickListener = this.addClickListener.bind(this);\n    this.addLayer = this.addLayer.bind(this);\n    this.createFeatures = this.createFeatures.bind(this);\n    this.updateData = this.updateData.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.insetOnClickEvent = this.insetOnClickEvent.bind(this);\n    this.handleClickOnInset = this.handleClickOnInset.bind(this);\n    this.initializeMap = this.initializeMap.bind(this);\n    this.state = {\n      popoverColor: 'popover-general-icon',\n      bbox: null,\n    };\n  }\n\n  componentDidMount() {\n    const { networks } = this.props;\n    const featuresHome = this.createFeatures(networks);\n    this.initializeMap(featuresHome);\n  }\n\n  componentDidUpdate(prevProps) {\n \n    const {\n      hoveredPointId,\n      viewState,\n      bbox,\n      networks\n    } = this.props;\n    this.map.resize();\n    // changed filters\n    if (networks.length !== prevProps.networks.length) {\n      this.updateData(this.props.networks);\n    }\n    // toggled view between full map and zoom\n    if (prevProps.viewState !== viewState) {\n      this.hoveredPopup.remove(); //close any open popup\n      if (viewState === 'default') {\n        this.setInitialState();\n      }\n    }\n    // if a bounding box has been set before render, fix the bounds and clear\n    // for changing map zoom and size\n\n    if ((this.state.bbox && viewState === 'list')) {\n      this.fitBounds(this.state.bbox);\n      this.setState({\n        bbox: null\n      })\n    }\n    if (bbox && viewState === 'list' && bbox !== prevProps.bbox) {\n      this.fitBounds(bbox);\n    }\n\n    if (hoveredPointId) {\n      this.hoverPoint(hoveredPointId)\n    } \n    if (prevProps.hoveredPointId && prevProps.hoveredPointId !== hoveredPointId) {\n      this.unHoverPoint(prevProps.hoveredPointId);\n    }\n  }\n\n  insetOnClickEvent(e) {\n    this.setState({ inset: false });\n    const dataBounds = e.target.parentNode.parentNode.getAttribute('data-bounds').split(',');\n    const boundsOne = [Number(dataBounds[0]), Number(dataBounds[1])];\n    const boundsTwo = [Number(dataBounds[2]), Number(dataBounds[3])];\n    const bounds = boundsOne.concat(boundsTwo);\n    this.fitBounds(bounds);\n  }\n\n  fitBounds(bounds) {\n    this.map.fitBounds(bounds, {\n      padding: {\n        top: 10,\n        bottom: 25,\n        left: 15,\n        right: 5\n      },\n      maxZoom: 8\n    })\n  }\n\n  updateData(networks) {\n    const featuresHome = this.createFeatures(networks);\n    if (!this.map.getSource(LAYER_NAME)) {\n      return;\n    }\n    this.map.getSource(LAYER_NAME).setData(featuresHome);\n  }\n\n  createFeatures(networks) {\n    const featuresHome = {\n      features: [],\n      type: 'FeatureCollection',\n    };\n    featuresHome.features = networks.map((network) => {\n      const newFeature = new Point(network);\n      return newFeature;\n    });\n    return featuresHome;\n  }\n\n  addPopups(layer) {\n    const { map } = this;\n\n    this.hoveredPopup = new mapboxgl.Popup({\n      closeButton: true,\n      closeOnClick: true,\n    });\n\n    map.on('mousemove', (e) => {\n      const features = map.queryRenderedFeatures(e.point, { layers: [layer] });\n      // Change the cursor style as a UI indicator.\n      map.getCanvas().style.cursor = (features.length) ? 'pointer' : '';\n\n      if (features.length) {\n        const feature = features[0];\n        const { properties } = feature;\n        const popoverClassName = `popover-${feature.properties.category.split(' ').join('-').toLowerCase()}`\n        this.setState({\n          popoverColor: popoverClassName\n        });\n        this.props.setHoveredPoint(features[0].id);\n        let link;\n        if (properties.generalForm) {\n          link = `<a rel=\"noopener noreferrer\" target=\"_blank\" href=${properties.generalForm}>Link to form</a>`\n        } else if (properties.supportOfferForm && properties.supportRequestForm) {\n          link = `<a rel=\"noopener noreferrer\" class=\"side-by-side\" target=\"_blank\" href=${properties.supportOfferForm}>Offer support</a><a class=\"side-by-side\" target=\"_blank\" href=${properties.supportRequestForm}>Request support</a>`\n        } else if (properties.supportOfferForm) {\n          link = `<a rel=\"noopener noreferrer\" href=${properties.supportOfferForm}>Offer support</a>`;\n        } else if (properties.supportRequestForm) {\n          link = `<a rel=\"noopener noreferrer\" href=${properties.supportRequestForm}>Request support</a>`;\n        } else {\n          link = `<a rel=\"noopener noreferrer\" href=${properties.facebookPage}>Link to group</a>`;\n        }\n        return this.hoveredPopup.setLngLat(feature.geometry.coordinates)\n          .setHTML(`\n            <h4>${properties.title}</h4>\n            <div>${properties.city}, ${properties.state}</div>\n            <div>${link}</div>`)\n \n          .addTo(map);\n      }\n      return undefined;\n    });\n  \n  }\n\n  addClickListener() {\n\n    const { map } = this;\n    const {\n      setLatLng\n    } = this.props;\n\n    map.on('click', (e) => {\n      const features = map.queryRenderedFeatures(\n        e.point,\n        {\n          layers: [LAYER_NAME],\n        },\n      );\n\n      if (features.length > 0) {\n        setLatLng({lat: features[0].properties.lat, lng: features[0].properties.lng});\n      }\n    });\n  }\n\n  hoverPoint(hoveredPinId) {\n    this.map.setFeatureState({\n      source: LAYER_NAME,\n      id: hoveredPinId\n    }, {\n      hover: true\n    });\n  };\n\n  unHoverPoint(hoveredPinId) {\n    this.map.setFeatureState({\n      source: LAYER_NAME,\n      id: hoveredPinId\n    }, {\n      hover: false\n    });\n  };\n\n  addLayer(featuresHome) {\n    this.map.addLayer(\n      {\n        id: LAYER_NAME,\n        paint: {\n          // 'circle-opacity': 0.5,\n          'circle-opacity': [\n            'case',\n            ['boolean', ['feature-state', 'hover'], false],\n            1,\n            0.5\n          ],\n          'circle-radius': 8\n          // [\n          //   'interpolate', ['linear'],\n          //   ['number', ['get', 'scale'], 5],\n          //     1,\n          //     5,\n          //     70,\n          //     70\n          // ]\n          , \n          'circle-stroke-color': '#fff',\n          'circle-stroke-width': [\n            'case',\n            ['boolean', ['feature-state', 'hover'], false],\n            2,\n            1\n          ],\n          'circle-color': [\n            'match',\n            ['get', 'category'],\n            REQUEST_SUPPORT,\n            '#ef4822',\n            OFFER_SUPPORT,\n            '#6ac1e5',\n            GENERAL,\n            '#8048f3',\n            /* other */\n            '#057A8F'\n          ]\n        },\n        source: {\n          data: featuresHome,\n          type: 'geojson',\n        },\n        type: 'circle',\n      },\n      'district_interactive',\n    );\n  }\n\n\n  handleReset() {\n    const {\n      setLatLng\n    } = this.props;\n\n    setLatLng({});\n  }\n\n  setInitialState() {\n    this.fitBounds([\n      [-128.8, 23.6],\n      [-65.4, 50.2]\n    ]);\n    document.getElementsByClassName('mapboxgl-ctrl-geocoder--input');\n    Array.from(document.getElementsByClassName('mapboxgl-ctrl-geocoder--input')).forEach(ele => {\n      ele.value = '';\n    })\n    this.map.resize();\n  }\n\n  handleClickOnInset(bounds) {\n    // this is for clicking on a state inset\n    this.setState({bbox: bounds})\n\n    const mbBounds = new mapboxgl.LngLatBounds(bounds);\n    const center = mbBounds.getCenter();\n    this.props.setLatLng(center);\n  }\n\n  // Creates the button in our zoom controls to go to the national view\n  makeZoomToNationalButton() {\n    document.querySelector('.mapboxgl-ctrl-compass').remove();\n    if (document.querySelector('.mapboxgl-ctrl-usa')) {\n      document.querySelector('.mapboxgl-ctrl-usa').remove();\n    }\n    const usaButton = document.createElement('button');\n    usaButton.className = 'mapboxgl-ctrl-icon mapboxgl-ctrl-usa';\n    usaButton.innerHTML = '<span class=\"usa-icon\"></span>';\n\n    usaButton.addEventListener('click', this.handleReset);\n    document.querySelector('.mapboxgl-ctrl-group').appendChild(usaButton);\n  }\n\n  initializeMap(featuresHome) {\n    const {\n      setLatLng\n    } = this.props;\n\n    mapboxgl.accessToken = accessToken;\n\n    this.map = new mapboxgl.Map({\n      container: 'map',\n      style: mapboxStyle,\n    });\n\n    // Set Mapbox map controls\n    this.map.addControl(new mapboxgl.NavigationControl());\n    this.map.scrollZoom.disable();\n    this.map.dragRotate.disable();\n    this.map.touchZoomRotate.disableRotation();\n    this.makeZoomToNationalButton();\n    const { map } = this;\n    this.map.addControl(\n      new MapboxGeocoder({\n        accessToken: mapboxgl.accessToken,\n        mapboxgl: mapboxgl,\n        countries: 'us',\n        marker: false,\n        zoom: 12,\n        flyTo: false,\n      })\n      .on('clear', function (result) {\n        setLatLng({});\n      })\n      .on('result', function (returned) {\n        map.resize();\n        setLatLng({\n          lat: returned.result.center[1],\n          lng: returned.result.center[0]\n        });\n\n      }),\n      'top-left'\n    );\n    // map on 'load'\n    this.map.on('load', () => {\n      this.fitBounds([[-128.8, 23.6], [-65.4, 50.2]]);\n      this.addClickListener();\n      this.addLayer(featuresHome);\n      this.addPopups(LAYER_NAME);\n      // this.map.getSource(LAYER_NAME).setData(featuresHome);\n    });\n  }\n\n  render() {\n    const {\n      center,\n      resetSelections,\n      setLatLng,\n      viewState,\n      networks,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <div id=\"map\" className={this.state.popoverColor}>\n          <div className=\"map-overlay\" id=\"legend\">\n            <MapInset\n              networks={filter(networks, { state: 'AK' })}\n              center={center}\n              stateName=\"AK\"\n              viewState={viewState}\n              resetSelections={resetSelections}\n              setLatLng={setLatLng}\n              setBounds={this.handleClickOnInset}\n              mapId=\"map-overlay-alaska\"\n              bounds={[[-170.15625, 51.72702815704774], [-127.61718749999999, 71.85622888185527]]}\n            />\n            <MapInset\n              networks={filter(networks, { state: 'HI' })}\n              stateName=\"HI\"\n              center={center}\n              viewState={viewState}\n              resetSelections={resetSelections}\n              setLatLng={setLatLng}\n              setBounds={this.handleClickOnInset}\n              mapId=\"map-overlay-hawaii\"\n              bounds={[\n                [-161.03759765625, 18.542116654448996],\n                [-154.22607421875, 22.573438264572406]]}\n            />\n          </div>\n        </div>\n\n      </React.Fragment>\n    );\n  }\n}\n\nMapView.propTypes = {\n  networks: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  setLatLng: PropTypes.func.isRequired,\n};\n\nMapView.defaultProps = {\n\n};\n\nexport default MapView;\n","import React from 'react';\nimport { Button } from 'antd';\nimport './style.scss';\n\nconst SubmitNetwork = () => {\n  return (\n      <div className=\"start-network-container\">\n        <Button \n          id=\"start-network-button\" \n          target=\"_blank\" \n          href=\"https://docs.google.com/forms/d/e/1FAIpQLScuqQtCdKsDzvTzaA2PMyVHX7xcOqbOW7N7l_0YJASV4wMBVQ/viewform\">\n            Submit a Mutual Aid Network\n        </Button>\n      </div>\n  )\n};\n\nexport default SubmitNetwork;","import React from \"react\";\nimport { Checkbox } from 'antd';\nimport classNames from 'classnames';\nimport { options }  from '../../state/selections/reducers';\n\nimport './style.scss';\n\nconst CheckboxGroup = Checkbox.Group;\n\nclass Filters extends React.Component {\n    state = {\n        // checkedList: this.props.selectedCategories,\n        indeterminate: false,\n        checkAll: true,\n    };\n\n    onChange = checkedList => {\n        \n        this.props.setFilters(checkedList);\n        this.setState({\n            indeterminate: !!checkedList.length && checkedList.length < options.length,\n            checkAll: checkedList.length === options.length,\n        });\n    };\n\n    onCheckAllChange = e => {\n        const checkedList = e.target.checked ? options : [];\n        this.setState({\n            indeterminate: false,\n            checkAll: e.target.checked,\n        });\n        this.props.setFilters(checkedList);\n    };\n\n    render() {\n        if (!this.props.visible) {\n            return null;\n        }\n        return (\n            <div className={classNames(\"filter-container\", {'absolute-pos': this.props.absolute})}>\n                <div className=\"site-checkbox-all-wrapper\">\n                    <Checkbox\n                        indeterminate={this.state.indeterminate}\n                        onChange={this.onCheckAllChange}\n                        checked={this.state.checkAll}\n                    >\n                        Select all\n                    </Checkbox>\n                </div>\n                <br />\n                <CheckboxGroup\n                    value={this.props.selectedCategories}\n                    onChange={this.onChange}\n                >\n                    {options.map((ele) => <Checkbox key={ele.replace(' ', '-').toLowerCase()} className={ele.replace(' ', '-').toLowerCase()} value={ele}>{ele}</Checkbox>)}\n                </CheckboxGroup>\n            </div>\n        );\n    }\n}\n\nexport default Filters;","import React from 'react';\nimport {\n  Card,\n  Row\n} from 'antd';\nimport './style.scss';\n\n\nconst NetworkCard = (props) => {\n\n  const parseNetworks = (networks) => {\n    return networks.map(network => {\n      const {\n        address,\n        title,\n        neighborhood,\n        facebookPage,\n        category,\n        community,\n        language,\n        generalForm,\n        supportRequestForm,\n        supportOfferForm,\n        id\n      } = network;\n      return (\n        <Card\n          className='network-card'\n          title={title}\n          key={id}\n          onMouseEnter={\n            () => props.setHoveredPoint(id)\n          }\n          onMouseLeave={\n            () => props.setHoveredPoint(null)\n          }\n          extra={\n            <ul className='list-inline'>\n            {category && <li className={`text-${category.split(' ').join('-').toLowerCase()}`}>{category}</li>}\n            {community && <li>{community}</li>}\n          </ul>\n          }\n        >\n          <ul className='list-inline'>\n            {neighborhood && <li>{neighborhood}</li>}\n            {address && <li>{address}</li>}\n            {language && <li>{language}</li>}\n          </ul>\n          <Row justify=\"space-between\">\n            {generalForm && <a href={generalForm} target=\"_blank\" rel=\"noopener noreferrer\" className=\"button\">Offer or request help</a>}\n            {supportRequestForm && <a href={supportRequestForm} rel=\"noopener noreferrer\" target=\"_blank\" className=\"button\">Request help</a>}\n            {supportOfferForm && <a href={supportOfferForm} rel=\"noopener noreferrer\" target=\"_blank\" className=\"button\">Offer help</a>}\n            {facebookPage && <a href={facebookPage} rel=\"noopener noreferrer\" target=\"_blank\" className=\"button\">Join social media</a>}\n          </Row>\n        </Card>\n      )\n    })\n  }\n\n  return (\n    <>\n      {parseNetworks(props.networks)}\n    </>\n  )\n}\n\nexport default NetworkCard\n","import React from 'react';\nimport { Typography } from 'antd';\nimport { InfoCircleOutlined } from '@ant-design/icons';\nimport NetworkCard from '../NetworkCard'\nimport Filters from '../Filters';\nimport './style.scss';\n\nconst { Title } = Typography;\n\nconst NoNetworkSection = () => {\n  return (\n    <div className=\"no-network-section\">\n      <Title level={3}><InfoCircleOutlined /></Title>\n      <Title level={3}>There are no support requests or networks nearby.</Title> \n    </div>\n  )\n}\n\nconst ListView = ({\n    visibleCards,\n    setHoveredPoint,\n    setFilters,\n    selectedCategories\n  }) => {\n  return (\n      <div className=\"list-container\">\n        {\n          visibleCards.length ? \n          <>\n            <Filters \n                setFilters={setFilters}\n                absolute={false}\n                selectedCategories={selectedCategories}\n                visible={true}\n            />\n            <NetworkCard \n              setHoveredPoint={setHoveredPoint} \n              networks={visibleCards} /></> : <NoNetworkSection />\n              \n        }\n      </div>\n  )\n};\n\nexport default ListView;","import React from 'react';\n\nexport default () => (\n        <div class=\"webGl-warning\" target=\"_blank\">\n            {/* <img class=\"webGl-compimg\" src=\"../Images/map/ohno-computer.png\"></img> */}\n            <p>Our interactive map feature uses WebGL, a plugin common in most modern browsers. Your browser does not have WebGL working currently.</p>\n            <p>You can learn how to enable WebGL on\n                        <a rel=\"noopener noreferrer\" href=\"https://get.webgl.org/\" target=\"_blank\"> this website.</a>\n            </p>\n        </div>)\n","import React from 'react';\nimport {\n  connect\n} from 'react-redux';\nimport { Layout, Menu } from 'antd';\n\nimport networkStateBranch from '../state/networks';\nimport selectionStateBranch from '../state/selections';\nimport MapView from '../components/Map';\nimport SubmitNetwork from '../components/SubmitNetwork';\nimport Filters from '../components/Filters';\nimport ListView from '../components/ListView';\n\nimport './style.scss';\nimport NoWebGl from '../components/NoWebGl';\n\nconst { Header, Content, Footer } = Layout;\nconst mapboxgl = window.mapboxgl;\nclass DefaultLayout extends React.Component {\n  componentDidMount() {\n    const {\n      requestNetworks\n    } = this.props;\n    requestNetworks();\n  }\n  render() {\n    const {\n      setFilters,\n      selectedCategories,\n      filteredNetworks,\n      viewState,\n      setLatLng,\n      visibleCards,\n      allNetworks,\n      setHoveredPoint,\n      hoveredPointId,\n      masterBbox\n    } = this.props;\n    \n    if (!allNetworks.length) {\n      return null;\n    }\n    // viewState --> list or default\n    return (\n      <Layout className=\"layout\">\n        <Header>\n          <div className=\"logo\"></div>\n          <Menu\n            theme=\"dark\"\n            mode=\"horizontal\"\n            style={{ lineHeight: '64px' }}\n          >\n            {/* <Menu.Item key=\"1\">Guides and other resources</Menu.Item> */}\n          </Menu>\n        </Header>\n        <Content style={{ padding: '0 50px' }}>\n          <div className=\"main-container\">\n             {mapboxgl.supported() ? <>\n              <Filters \n                setFilters={setFilters}\n                selectedCategories={selectedCategories}\n                absolute={true}\n                visible={viewState ==='default'}\n              />\n              <div className={`interactive-content-${viewState}`}>\n              <MapView\n                  networks={filteredNetworks}\n                  viewState={viewState}\n                  setLatLng={setLatLng}\n                  hoveredPointId={hoveredPointId}\n                  setHoveredPoint={setHoveredPoint}\n                  bbox={masterBbox}\n                /> \n                <ListView \n                  visibleCards={visibleCards}\n                  setHoveredPoint={setHoveredPoint}\n                  setFilters={setFilters}\n                  selectedCategories={selectedCategories}\n                />\n                </div>\n              </>: <NoWebGl />}\n            \n            <div className=\"tagline\">Find Mutual Aid Networks and other community self-support projects near you. Reach out to these groups directly via the map above to get involved, offer resources, or submit needs requests.</div>\n            <SubmitNetwork />\n          </div>\n        </Content>\n        <Footer style={{ textAlign: 'center' }}>\n          <div className=\"footer-text\">\n            We list these networks as a public resource. We cannot verify or vouch for any network or individual offerings. Please exercise all necessary judgement when interacting with community members not previously known to you.\n          </div>\n        </Footer>\n      </Layout>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  filteredNetworks: networkStateBranch.selectors.getFilteredNetworks(state),\n  selectedCategories: selectionStateBranch.selectors.getSelectedCategories(state),\n  viewState: selectionStateBranch.selectors.getViewState(state),\n  searchLocation: selectionStateBranch.selectors.getSearchLocation(state),\n  visibleCards: networkStateBranch.selectors.getVisibleCards(state),\n  allNetworks: networkStateBranch.selectors.getAllNetworks(state),\n  hoveredPointId: selectionStateBranch.selectors.getHoveredPointId(state),\n  masterBbox: networkStateBranch.selectors.getBoundingBox(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  requestNetworks: () => dispatch(networkStateBranch.actions.requestNetworks()),\n  setFilters: (payload) => dispatch(selectionStateBranch.actions.setCategoryFilters(payload)),\n  setLatLng: (payload) => dispatch(selectionStateBranch.actions.setLatLng(payload)),\n  setHoveredPoint: (payload) => dispatch(selectionStateBranch.actions.setHoveredPoint(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DefaultLayout);\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport 'iframe-resizer';\n\nimport configureStore from './state/store';\n// Containers\nimport DefaultLayout from './containers/DefaultLayout';\nimport './index.css';\n\n// Bootstrap the store\nvar Store = configureStore();\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={Store}>\n        <DefaultLayout />\n      </Provider>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}