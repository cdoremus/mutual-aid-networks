{"version":3,"sources":["serviceWorker.js","utils/index.js","state/networks/reducers.js","state/networks/actions.js","state/selections/selectors.js","state/networks/selectors.js","state/networks/index.js","state/networks/logic.js","state/selections/reducers.js","state/selections/actions.js","state/selections/index.js","state/selections/logic.js","utils/firebaseinit.js","state/store.js","state/constants/index.js","components/Map/Point.js","components/Map/constants.js","components/Map/MapInset.js","components/Map/index.js","components/SubmitNetwork/index.jsx","components/Filters/index.jsx","components/NetworkCard/index.js","components/ListView/index.js","containers/DefaultLayout.js","index.js"],"names":["Boolean","window","location","hostname","match","makeConstant","branchOfState","actionType","REQUEST_NETWORKS","SET_NETWORKS","REQUEST_FAILED","initialState","allNetworks","eventReducer","state","type","payload","error","console","log","requestNetworks","getSelectedCategories","selections","categories","getSearchLocation","searchLocation","getHoveredPointId","hoveredPointId","getViewState","createSelector","lat","getAllNetworks","networks","getFilteredNetworks","length","filter","network","includes","category","getVisibleCards","filteredNetworks","lookup","LatLng","Number","lng","currentEvent","computeDistanceBetween","sort","a","b","actions","logics","createLogic","processOptions","successType","failType","process","deps","firestore","collection","get","then","snapshot","docs","map","doc","index","data","id","reducers","selectors","SET_CATEGORY_FILTERS","SET_LAT_LNG","SET_HOVERED_POINT","options","view","language","community","setCategoryFilters","setLatLng","setHoveredPoint","action","PREFIX","config","apiKey","authDomain","databaseURL","storageBucket","messagingSenderId","projectId","firebase","initializeApp","firebasedb","database","reduxLogicDependencies","firebaseUrl","httpClient","request","logicMiddleware","createLogicMiddleware","middleware","applyMiddleware","Point","this","geometry","coordinates","scale","bbox","properties","region","contact","socials","social","title","form","LAYER_NAME","accessToken","mapboxgl","MapInset","props","addClickListener","bind","addLayer","createFeatures","updateData","featuresHome","initializeMap","nextProps","getSource","stateName","setData","features","bounds","setBounds","on","paint","source","mapId","Map","container","doubleClickZoom","dragPan","scrollZoom","style","fitBounds","easeTo","duration","linear","viewState","mapClassNames","classNames","hidden","inset","Fragment","className","data-bounds","React","Component","defaultProps","selectedState","MapView","filterDistrict","includedStates","addPopups","handleReset","insetOnClickEvent","handleClickOnInset","popoverColor","prevProps","resize","hoveredPopup","remove","setInitialState","setState","hoverPoint","unHoverPoint","e","dataBounds","target","parentNode","getAttribute","split","boundsOne","boundsTwo","concat","layer","Popup","closeButton","closeOnClick","queryRenderedFeatures","point","layers","getCanvas","cursor","feature","popoverClassName","join","toLowerCase","link","setLngLat","setHTML","addTo","JSON","parse","hoveredPinId","setFeatureState","hover","document","getElementsByClassName","Array","from","forEach","ele","value","center","LngLatBounds","getCenter","querySelector","usaButton","createElement","innerHTML","addEventListener","appendChild","addControl","NavigationControl","disable","dragRotate","touchZoomRotate","disableRotation","makeZoomToNationalButton","me","MapboxGeocoder","countries","marker","zoom","flyTo","result","returned","resetSelections","SubmitNetwork","href","CheckboxGroup","Group","Filters","indeterminate","checkAll","onChange","checkedList","setFilters","onCheckAllChange","checked","selectedCategories","key","replace","NetworkCard","address","neighborhood","onMouseEnter","onMouseLeave","extra","justify","ListView","visibleCards","Header","Content","Footer","DefaultLayout","theme","mode","lineHeight","padding","textAlign","connect","networkStateBranch","selectionStateBranch","dispatch","Store","createStore","combineReducers","App","store","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"iiCAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,wDClBOC,EAAe,SAACC,EAAeC,GAAhB,gBAAkCD,EAAlC,YAAmDC,ICKlEC,EAAmBH,EAFX,SAEsC,oBAC9CI,EAAeJ,EAHP,SAGkC,gBAC1CK,EAAiBL,EAJT,SAIoC,kBACnDM,EAAe,CACnBC,YAAa,IAuBAC,EAnBM,WAA8C,IAA7CC,EAA4C,uDAApCH,EAAoC,yCAApBI,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAClD,OAAQD,GACN,KAAKN,EACH,OAAO,eACFK,EADL,CAEEF,YAAaI,EACbC,MAAO,OAEX,KAAKP,EAEH,OADAQ,QAAQC,IAAR,0BAA+BH,IACxB,eACFF,EADL,CAEEG,MAAOD,IAEV,QACC,OAAOF,ICvBAM,EAAkB,iBAAO,CACpCL,KAAMP,I,mCCJKa,EAAwB,SAACP,GAAD,OAAWA,EAAMQ,WAAWC,YAEpDC,EAAoB,SAAAV,GAAK,OAAIA,EAAMQ,WAAWG,gBAC9CC,EAAoB,SAAAZ,GAAK,OAAIA,EAAMQ,WAAWK,gBAE9CC,EAAeC,YAAe,CAACL,IAAoB,SAACC,GAC7D,OAAIA,EAAeK,IACR,OAEJ,aCFEC,EAAiB,SAAAjB,GAAK,OAAIA,EAAMkB,SAASpB,aAEzCqB,EAAsBJ,YAAe,CAACE,EAAgBV,IAAwB,SAACW,EAAUT,GAClG,OAAKA,EAAWW,OAGTC,iBAAOH,GAAU,SAACI,GACrB,OAAOb,EAAWc,SAASD,EAAQE,aAH5B,MAOFC,EAAkBV,YAC3B,CACII,EACAT,IAEJ,SACIgB,EACAtC,GAEA,IAAKA,EAAS4B,IACV,MAAO,GAEX,IAAMW,EAAS,IAAIC,IAAOC,OAAOzC,EAAS4B,KAAMa,OAAOzC,EAAS0C,MAEhE,OAAOJ,EAAiBL,QAAO,SAACU,GAK5B,OAJoBC,YAChBL,EACA,IAAIC,IAAOC,OAAOE,EAAaf,KAAMa,OAAOE,EAAaD,OAJ/C,SAOfG,MAAK,SAACC,EAAGC,GASR,OARkBH,YACdL,EACA,IAAIC,IAAOC,OAAOK,EAAElB,KAAMa,OAAOK,EAAEJ,OAErBE,YACdL,EACA,IAAIC,IAAOC,OAAOM,EAAEnB,KAAMa,OAAOM,EAAEL,a,SC1CpC,GACXM,UACAC,OC4BW,CAzBOC,YAAY,CAChCrC,KAAMP,EACN6C,eAAgB,CACdC,YAAa7C,EACb8C,SAAU7C,GAEZ8C,QANgC,SAMxBC,GAIN,OADIA,EADFC,UAEeC,WAAW,uBAAuBC,MAChDC,MAAK,SAACC,GAQL,OAPoBA,EAASC,KAAKC,KAAI,SAACC,EAAKC,GAC1C,OAAO,eACFD,EAAIE,OADT,CAEEC,GAAIF,EACJ5B,SAAU2B,EAAIE,OAAO7B,UAAY,sBDlBzC+B,WACAC,aEJSC,EAAuBlE,EADf,aAC0C,sBAClDmE,EAAcnE,EAFN,aAEiC,eACzCoE,EAAoBpE,EAHZ,aAGuC,qBAE/CqE,EAAU,CAAC,UAAW,kBAAmB,gBAAiB,eAEjE/D,EAAe,CACnBgE,KAAM,UACNpD,WAAYmD,EACZE,SAAU,GACVC,UAAW,GACXpD,eAAgB,GAChBE,eAAgB,MCXLmD,EAAqB,SAAC9D,GAAD,MAAc,CAC5CD,KAAMwD,EACNvD,YAGS+D,EAAY,SAAC/D,GAAD,MAAc,CACnCD,KAAMyD,EACNxD,YAGSgE,EAAkB,SAAChE,GAAD,MAAc,CACzCD,KAAM0D,EACNzD,YCbW,GACXkC,UACAC,OCJW,GDKXkB,SFYqB,WAAmC,IAAlCvD,EAAiC,uDAAzBH,EAAcsE,EAAW,uCACzD,OAAQA,EAAOlE,MACb,KAAKwD,EACH,OAAO,eACFzD,EADL,CAEES,WAAY0D,EAAOjE,UAErB,KAAKwD,EACH,OAAO,eACF1D,EADL,CAEEW,eAAgBwD,EAAOjE,UAE3B,KAAKyD,EACH,OAAO,eACF3D,EADL,CAEEa,eAAgBsD,EAAOjE,UAEzB,QACE,OAAOF,IE7BbwD,a,kBELEY,GAAiD,iBAMvD,IAAMC,GAAS,CACbC,OAAQ5B,o6BAAA,UAAe0B,GAAf,sBACRG,WAAY7B,o6BAAA,UAAe0B,GAAf,0BACZI,YAAa9B,o6BAAA,UAAe0B,GAAf,kBACbK,cAAe/B,o6BAAA,UAAe0B,GAAf,oBACfM,kBAAmBhC,o6BAAA,UAAe0B,GAAf,yBACnBO,UAAWjC,o6BAAA,UAAe0B,GAAf,iBAGbQ,IAASC,cAAcR,IAChB,IAAMS,GAAaF,IAASG,WACtBnC,GAAYgC,IAAShC,YCP5BW,IDSSqB,EAAf,ECTiB,CACf1D,SAAUA,EAASqC,SACnB/C,WAAYA,EAAW+C,WAGnBlB,GAAM,sBACPnB,EAASmB,QADF,YAEP7B,EAAW6B,SAGV2C,GAAyB,CAC7BC,YCzBiEvC,4CD0BjEoC,cACAlC,aACAsC,WAAYC,KAGRC,GAAkBC,YAAsBhD,GAAQ2C,IAElDM,GAAaC,YACfH,I,OAOa,I,2DEhBAI,GAxBX,WAAYlE,GAAU,oBAClBmE,KAAKxF,KAAO,UACZwF,KAAKC,SAAW,CACZC,YAAa,CAAC9D,OAAOP,EAAQQ,KAAMD,OAAOP,EAAQN,MAClDf,KAAM,SAEV,IAAM2F,EAAQtE,EAAQuE,KAAK,GAAKvE,EAAQuE,KAAK,GAC7CJ,KAAKK,WAAa,CACdC,OAAQzE,EAAQyE,OAChBC,QAAS1E,EAAQ0E,SAAW,KAC5BC,QAAS3E,EAAQ4E,QAAU,KAC3BlG,MAAOsB,EAAQtB,MACfmG,MAAO7E,EAAQ6E,MACfC,KAAM9E,EAAQ8E,KACd5E,SAAUF,EAAQE,UAAY,UAC9BqE,KAAMvE,EAAQuE,KACd7E,IAAKM,EAAQN,IACbc,IAAKR,EAAQQ,IACb8D,MAAe,GAARA,GAEXH,KAAKnC,GAAKhC,EAAQgC,I,mBCrBb+C,GAAa,gBACbC,GAAc,uGCQrBC,GAAWpH,OAAOoH,SAElBC,G,YACJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,iBAAmB,EAAKA,iBAAiBC,KAAtB,iBACxB,EAAKC,SAAW,EAAKA,SAASD,KAAd,iBAChB,EAAKE,eAAiB,EAAKA,eAAeF,KAApB,iBACtB,EAAKG,WAAa,EAAKA,WAAWH,KAAhB,iBALD,E,iFASE,IACXzF,EAAauE,KAAKgB,MAAlBvF,SACF6F,EAAetB,KAAKoB,eAAe3F,GACzCuE,KAAKuB,cAAcD,K,gDAGKE,GAAY,IAElC/F,EACE+F,EADF/F,SAGEA,EAASE,SAAWqE,KAAKgB,MAAMvF,SAASE,QAC1CqE,KAAKqB,WAAW5F,K,iCAITA,GACT,IAAM6F,EAAetB,KAAKoB,eAAe3F,GACpCuE,KAAKvC,IAAIgE,UAAT,UAAsBb,GAAtB,YAAoCZ,KAAKgB,MAAMU,aAGpD1B,KAAKvC,IAAIgE,UAAT,UAAsBb,GAAtB,YAAoCZ,KAAKgB,MAAMU,YAAaC,QAAQL,K,qCAGvD7F,GACb,IAAM6F,EAAe,CACnBM,SAAU,GACVpH,KAAM,qBAOR,OALA8G,EAAaM,SAAWnG,EAASgC,KAAI,SAAC5B,GAGpC,OADmB,IAAIkE,GAAMlE,MAGxByF,I,yCAGW,IAAD,EAIbtB,KAAKgB,MAFPa,EAFe,EAEfA,OACAC,EAHe,EAGfA,UAEc9B,KAARvC,IAEJsE,GAAG,SAAS,WACdD,EAAUD,Q,+BAILP,GACPtB,KAAKvC,IAAI0D,SACP,CACEtD,GAAG,GAAD,OAAK+C,GAAL,YAAmBZ,KAAKgB,MAAMU,WAChCM,MAAO,CACL,iBAAkB,GAClB,gBAAiB,EACjB,sBAAuB,OACvB,sBAAuB,EACvB,eAAgB,CACd,QACA,CAAC,MAAO,YACR,kBACA,UACA,gBACA,UACA,UACA,UAEA,YAGJC,OAAQ,CACNrE,KAAM0D,EACN9G,KAAM,WAERA,KAAM,UAER,0B,oCAIU8G,GAAe,IAAD,SAItBtB,KAAKgB,MAFPa,EAFwB,EAExBA,OACAK,EAHwB,EAGxBA,MAGFpB,GAASD,YACLA,GAGJb,KAAKvC,IAAM,IAAIqD,GAASqB,IAAI,CAC1BC,UAAWF,EACXG,iBAAiB,EACjBC,SAAS,EACTC,YAAY,EACZC,MAPe,8DAUjBxC,KAAKvC,IAAIgF,UAAUZ,EAAQ,CACzBa,OAAQ,CAAEC,SAAU,GACpBC,QAAQ,IAGV5C,KAAKvC,IAAIsE,GAAG,QAAQ,WAClB,EAAKd,mBACL,EAAKE,SAASG,Q,+BAKR,IAAD,EAIHtB,KAAKgB,MAFP6B,EAFK,EAELA,UACAX,EAHK,EAGLA,MAEIY,EAAgBC,KAAW,CAC/BC,OAAsB,SAAdH,EACRI,OAAO,IAET,OACE,kBAAC,IAAMC,SAAP,KACE,yBAAKrF,GAAIqE,EAAOiB,UAAWL,EAAeM,cAAapD,KAAKgB,MAAMa,c,GApInDwB,IAAMC,WAiJ7BvC,GAASwC,aAAe,CACtBC,cAAe,IAGFzC,UClJTD,I,4BAAWpH,OAAOoH,UAElB2C,G,YACJ,WAAYzC,GAAQ,IAAD,8BACjB,4CAAMA,KACD0C,eAAiB,CAAC,OACvB,EAAKC,eAAiB,CAAC,KAAM,QAE7B,EAAKC,UAAY,EAAKA,UAAU1C,KAAf,iBACjB,EAAKD,iBAAmB,EAAKA,iBAAiBC,KAAtB,iBACxB,EAAKC,SAAW,EAAKA,SAASD,KAAd,iBAChB,EAAKE,eAAiB,EAAKA,eAAeF,KAApB,iBACtB,EAAKG,WAAa,EAAKA,WAAWH,KAAhB,iBAClB,EAAK2C,YAAc,EAAKA,YAAY3C,KAAjB,iBACnB,EAAK4C,kBAAoB,EAAKA,kBAAkB5C,KAAvB,iBACzB,EAAK6C,mBAAqB,EAAKA,mBAAmB7C,KAAxB,iBAC1B,EAAKK,cAAgB,EAAKA,cAAcL,KAAnB,iBACrB,EAAK3G,MAAQ,CACXyJ,aAAc,uBACd5D,KAAM,MAhBS,E,iFAoBE,IACX3E,EAAauE,KAAKgB,MAAlBvF,SACF6F,EAAetB,KAAKoB,eAAe3F,GACzCuE,KAAKuB,cAAcD,K,yCAGF2C,GAAY,IAAD,EAMxBjE,KAAKgB,MAHP5F,EAH0B,EAG1BA,eACAyH,EAJ0B,EAI1BA,UACApH,EAL0B,EAK1BA,SAEFuE,KAAKvC,IAAIyG,SAELzI,EAASE,SAAWsI,EAAUxI,SAASE,QACzCqE,KAAKqB,WAAWrB,KAAKgB,MAAMvF,UAGzBwI,EAAUpB,YAAcA,IAC1B7C,KAAKmE,aAAaC,SACA,YAAdvB,GACF7C,KAAKqE,mBAKLrE,KAAKzF,MAAM6F,MAAsB,SAAdyC,IACrB7C,KAAKvC,IAAIgF,UAAUzC,KAAKzF,MAAM6F,MAC9BJ,KAAKsE,SAAS,CACZlE,KAAM,QAGNhF,GACF4E,KAAKuE,WAAWnJ,GAEd6I,EAAU7I,gBAAkB6I,EAAU7I,iBAAmBA,GAC3D4E,KAAKwE,aAAaP,EAAU7I,kB,wCAIdqJ,GAChBzE,KAAKsE,SAAS,CAAErB,OAAO,IACvB,IAAMyB,EAAaD,EAAEE,OAAOC,WAAWA,WAAWC,aAAa,eAAeC,MAAM,KAC9EC,EAAY,CAAC3I,OAAOsI,EAAW,IAAKtI,OAAOsI,EAAW,KACtDM,EAAY,CAAC5I,OAAOsI,EAAW,IAAKtI,OAAOsI,EAAW,KACtD7C,EAASkD,EAAUE,OAAOD,GAChChF,KAAKvC,IAAIgF,UAAUZ,K,iCAGVpG,GACT,IAAM6F,EAAetB,KAAKoB,eAAe3F,GACzCuE,KAAKvC,IAAIgF,UAAU,CAAC,EAAE,MAAO,MAAO,EAAE,KAAM,QACvCzC,KAAKvC,IAAIgE,UAAUb,KAGxBZ,KAAKvC,IAAIgE,UAAUb,IAAYe,QAAQL,K,qCAG1B7F,GACb,IAAM6F,EAAe,CACnBM,SAAU,GACVpH,KAAM,qBAMR,OAJA8G,EAAaM,SAAWnG,EAASgC,KAAI,SAAC5B,GAEpC,OADmB,IAAIkE,GAAMlE,MAGxByF,I,gCAGC4D,GAAQ,IAAD,OACPzH,EAAQuC,KAARvC,IAERuC,KAAKmE,aAAe,IAAIrD,GAASqE,MAAM,CACrCC,aAAa,EACbC,cAAc,IAGhB5H,EAAIsE,GAAG,aAAa,SAAC0C,GACnB,IAAM7C,EAAWnE,EAAI6H,sBAAsBb,EAAEc,MAAO,CAAEC,OAAQ,CAACN,KAI/D,GAFAzH,EAAIgI,YAAYjD,MAAMkD,OAAU9D,EAASjG,OAAU,UAAY,GAE3DiG,EAASjG,OAAQ,CACnB,IAAMgK,EAAU/D,EAAS,GACjBvB,EAAesF,EAAftF,WACFuF,EAAgB,kBAAcD,EAAQtF,WAAWtE,SAAS+I,MAAM,KAAKe,KAAK,KAAKC,eACrF,EAAKxB,SAAS,CACZN,aAAc4B,IAEhB,EAAK5E,MAAMvC,gBAAgBmD,EAAS,GAAG/D,IACvC,IAAMkI,EAAO1F,EAAWM,KAAX,kCAA6CN,EAAWM,KAAxD,uCAA6FN,EAAWG,QAAxG,sBACb,OAAO,EAAK2D,aAAa6B,UAAUL,EAAQ1F,SAASC,aACjD+F,QADI,4BAEG5F,EAAWK,MAFd,mCAGIqF,EAHJ,WAKJG,MAAMzI,S,yCAOK,IAAD,OAETA,EAAQuC,KAARvC,IAENe,EACEwB,KAAKgB,MADPxC,UAGFf,EAAIsE,GAAG,SAAS,SAAC0C,GACf,IAAM7C,EAAWnE,EAAI6H,sBACnBb,EAAEc,MACF,CACEC,OAAQ,CAAC5E,MAIb,GAAIgB,EAASjG,OAAS,EAAG,CACvB,IAAIyE,EAAO+F,KAAKC,MAAMxE,EAAS,GAAGvB,WAAWD,MAC7C5B,EAAU,CAACjD,IAAKqG,EAAS,GAAGvB,WAAW9E,IAAKc,IAAKuF,EAAS,GAAGvB,WAAWhE,MACxE,EAAKiI,SAAS,CAAClE,e,iCAKViG,GACTrG,KAAKvC,IAAI6I,gBAAgB,CACvBrE,OAAQrB,GACR/C,GAAIwI,GACH,CACDE,OAAO,M,mCAIEF,GACXrG,KAAKvC,IAAI6I,gBAAgB,CACvBrE,OAAQrB,GACR/C,GAAIwI,GACH,CACDE,OAAO,M,+BAIFjF,GACPtB,KAAKvC,IAAI0D,SACP,CACEtD,GAAI+C,GACJoB,MAAO,CAEL,iBAAkB,CAChB,OACA,CAAC,UAAW,CAAC,gBAAiB,UAAU,GACxC,EACA,IAEF,gBAAiB,EAUjB,sBAAuB,OACvB,sBAAuB,CACrB,OACA,CAAC,UAAW,CAAC,gBAAiB,UAAU,GACxC,EACA,GAEF,eAAgB,CACd,QACA,CAAC,MAAO,YACR,kBACA,UACA,gBACA,UACA,UACA,UAEA,YAGJC,OAAQ,CACNrE,KAAM0D,EACN9G,KAAM,WAERA,KAAM,UAER,0B,qCAUFgE,EAFIwB,KAAKgB,MADPxC,WAGQ,M,wCAIVwB,KAAKvC,IAAIgF,UAAU,CACjB,EAAE,MAAO,MACT,EAAE,KAAM,QAEV+D,SAASC,uBAAuB,iCAChCC,MAAMC,KAAKH,SAASC,uBAAuB,kCAAkCG,SAAQ,SAAAC,GACnFA,EAAIC,MAAQ,MAEd9G,KAAKvC,IAAIyG,W,yCAGQrC,GAEjB7B,KAAKsE,SAAS,CAAClE,KAAMyB,IAErB,IACMkF,EADW,IAAIjG,GAASkG,aAAanF,GACnBoF,YACxBjH,KAAKgB,MAAMxC,UAAUuI,K,iDAKrBP,SAASU,cAAc,0BAA0B9C,SAC7CoC,SAASU,cAAc,uBACzBV,SAASU,cAAc,sBAAsB9C,SAE/C,IAAM+C,EAAYX,SAASY,cAAc,UACzCD,EAAUhE,UAAY,uCACtBgE,EAAUE,UAAY,iCAEtBF,EAAUG,iBAAiB,QAAStH,KAAK6D,aACzC2C,SAASU,cAAc,wBAAwBK,YAAYJ,K,oCAG/C7F,GAAe,IAAD,OAExB9C,EACEwB,KAAKgB,MADPxC,UAGFsC,GAASD,YAAcA,GAGvBb,KAAKvC,IAAM,IAAIqD,GAASqB,IAAI,CAC1BC,UAAW,MACXI,MAJe,8DAQjBxC,KAAKvC,IAAI+J,WAAW,IAAI1G,GAAS2G,mBACjCzH,KAAKvC,IAAI8E,WAAWmF,UACpB1H,KAAKvC,IAAIkK,WAAWD,UACpB1H,KAAKvC,IAAImK,gBAAgBC,kBACzB7H,KAAK8H,2BAlBqB,IAmBlBrK,EAAQuC,KAARvC,IACFsK,EAAK/H,KACXA,KAAKvC,IAAI+J,WACP,IAAIQ,KAAe,CACjBnH,YAAaC,GAASD,YACtBC,SAAUA,GACVmH,UAAW,KACXC,QAAQ,EACRC,KAAM,GACNC,OAAO,IAERrG,GAAG,SAAS,SAAUsG,GACrB7J,EAAU,OAEXuD,GAAG,UAAU,SAAUuG,GACtB7K,EAAIyG,SACJ1F,EAAU,CACRjD,IAAK+M,EAASD,OAAOtB,OAAO,GAC5B1K,IAAKiM,EAASD,OAAOtB,OAAO,KAE9BgB,EAAGzD,SAAS,CACVlE,KAAMkI,EAASD,OAAOjI,UAG1B,YAGFJ,KAAKvC,IAAIsE,GAAG,QAAQ,WAClB,EAAKtE,IAAIgF,UAAU,CAAC,EAAE,MAAO,MAAO,EAAE,KAAM,QAC5C,EAAKxB,mBACL,EAAKE,SAASG,GACd,EAAKsC,UAAUhD,S,+BAKT,IAAD,EAOHZ,KAAKgB,MALP+F,EAFK,EAELA,OACAwB,EAHK,EAGLA,gBACA/J,EAJK,EAILA,UACAqE,EALK,EAKLA,UACApH,EANK,EAMLA,SAGF,OACE,kBAAC,IAAMyH,SAAP,KACE,yBAAKrF,GAAG,MAAMsF,UAAWnD,KAAKzF,MAAMyJ,cAClC,yBAAKb,UAAU,cAActF,GAAG,UAC9B,kBAAC,GAAD,CACEpC,SAAUG,iBAAOH,EAAU,CAAElB,MAAO,OACpCwM,OAAQA,EACRrF,UAAU,KACVmB,UAAWA,EACX0F,gBAAiBA,EACjB/J,UAAWA,EACXsD,UAAW9B,KAAK+D,mBAChB7B,MAAM,qBACNL,OAAQ,CAAC,EAAE,UAAW,mBAAoB,EAAE,mBAAoB,sBAElE,kBAAC,GAAD,CACEpG,SAAUG,iBAAOH,EAAU,CAAElB,MAAO,OACpCmH,UAAU,KACVqF,OAAQA,EACRlE,UAAWA,EACX0F,gBAAiBA,EACjB/J,UAAWA,EACXsD,UAAW9B,KAAK+D,mBAChB7B,MAAM,qBACNL,OAAQ,CACN,EAAE,gBAAiB,oBACnB,EAAE,gBAAiB,8B,GAjWbwB,IAAMC,WAgX5BG,GAAQF,aAAe,GAIRE,U,mBCnXA+E,I,OAbO,WACpB,OACI,yBAAKrF,UAAU,2BACb,wBACEtF,GAAG,uBACH8G,OAAO,SACP8D,KAAK,iGAHP,kC,mBCAFC,I,OAAgB,KAASC,OAmDhBC,G,2MAhDXrO,MAAQ,CAEJsO,eAAe,EACfC,UAAU,G,EAGdC,SAAW,SAAAC,GAEP,EAAKhI,MAAMiI,WAAWD,GACtB,EAAK1E,SAAS,CACVuE,gBAAiBG,EAAYrN,QAAUqN,EAAYrN,OAASwC,EAAQxC,OACpEmN,SAAUE,EAAYrN,SAAWwC,EAAQxC,U,EAIjDuN,iBAAmB,SAAAzE,GACf,IAAMuE,EAAcvE,EAAEE,OAAOwE,QAAUhL,EAAU,GACjD,EAAKmG,SAAS,CACVuE,eAAe,EACfC,SAAUrE,EAAEE,OAAOwE,UAEvB,EAAKnI,MAAMiI,WAAWD,I,wEAItB,OACI,yBAAK7F,UAAU,oBACX,yBAAKA,UAAU,6BACX,wBACI0F,cAAe7I,KAAKzF,MAAMsO,cAC1BE,SAAU/I,KAAKkJ,iBACfC,QAASnJ,KAAKzF,MAAMuO,UAHxB,eAQJ,6BACA,kBAACJ,GAAD,CACI5B,MAAO9G,KAAKgB,MAAMoI,mBAClBL,SAAU/I,KAAK+I,UAEd5K,EAAQV,KAAI,SAACoJ,GAAD,OAAS,wBAAUwC,IAAKxC,EAAIyC,QAAQ,IAAK,KAAKxD,cAAe3C,UAAW0D,EAAIyC,QAAQ,IAAK,KAAKxD,cAAegB,MAAOD,GAAMA,Y,GA1CrIxD,IAAMC,W,qCCqDbiG,I,OAtDK,SAACvI,GA+CnB,OACE,oCACiBA,EAAMvF,SA9CPgC,KAAI,SAAA5B,GAAY,IAE5B2N,EASE3N,EATF2N,QACA9I,EAQE7E,EARF6E,MACA+I,EAOE5N,EAPF4N,aACA9I,EAME9E,EANF8E,KACAF,EAKE5E,EALF4E,OACA1E,EAIEF,EAJFE,SACAuC,EAGEzC,EAHFyC,UACAD,EAEExC,EAFFwC,SACAR,EACEhC,EADFgC,GAEF,OACE,wBACEsF,UAAU,eACVzC,MAAOA,EACP2I,IAAKxL,EACL6L,aACE,kBAAM1I,EAAMvC,gBAAgBZ,IAE9B8L,aACE,kBAAM3I,EAAMvC,gBAAgB,OAE9BmL,MACE,wBAAIzG,UAAU,eACbpH,GAAY,4BAAKA,GACjBuC,GAAa,4BAAKA,KAIrB,wBAAI6E,UAAU,eACXsG,GAAgB,4BAAKA,GACrBD,GAAW,4BAAKA,GAChBnL,GAAY,4BAAKA,IAEpB,wBAAKwL,QAAQ,iBACVlJ,GAAQ,uBAAG8H,KAAM9H,EAAMgE,OAAO,SAASxB,UAAU,UAAzC,iCACR1C,GAAU,uBAAGgI,KAAMhI,EAAQkE,OAAO,SAASxB,UAAU,UAA3C,6BC/BR2G,GAdE,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,aAActL,EAAsB,EAAtBA,gBAEhC,OACI,yBAAK0E,UAAU,kBAEX4G,EAAapO,OACX,kBAAC,GAAD,CACE8C,gBAAiBA,EACjBhD,SAAUsO,IAPG,sDCWnBC,I,YAAAA,QAAQC,G,KAAAA,QAASC,G,KAAAA,OAEnBC,G,6LAKFtP,EADImF,KAAKgB,MADPnG,qB,+BAIM,IAAD,EAWHmF,KAAKgB,MATPiI,EAFK,EAELA,WACAG,EAHK,EAGLA,mBACAnN,EAJK,EAILA,iBACA4G,EALK,EAKLA,UACArE,EANK,EAMLA,UACAuL,EAPK,EAOLA,aACA1P,EARK,EAQLA,YACAoE,EATK,EASLA,gBACArD,EAVK,EAULA,eAGF,OAAKf,EAAYsB,OAKf,wBAAQwH,UAAU,UAChB,kBAAC6G,GAAD,KACE,yBAAK7G,UAAU,QAAf,kBACA,wBACEiH,MAAM,OACNC,KAAK,aACL7H,MAAO,CAAE8H,WAAY,WAKzB,kBAACL,GAAD,CAASzH,MAAO,CAAE+H,QAAS,WACzB,yBAAKpH,UAAU,kBACb,kBAAC,GAAD,CACE8F,WAAYA,EACZG,mBAAoBA,IAEtB,yBAAKjG,UAAS,8BAAyBN,IACrC,kBAACV,GAAD,CACE1G,SAAUQ,EACV4G,UAAWA,EACXrE,UAAWA,EACXpD,eAAgBA,EAChBqD,gBAAiBA,IAEnB,kBAAC,GAAD,CACEsL,aAAcA,EACdtL,gBAAiBA,KAGrB,yBAAK0E,UAAU,WAAf,yJACA,kBAAC,GAAD,QAGJ,kBAAC+G,GAAD,CAAQ1H,MAAO,CAAEgI,UAAW,WAC1B,yBAAKrH,UAAU,eAAf,kOAvCG,S,GArBeE,IAAMC,WAsFnBmH,gBAjBS,SAAClQ,GAAD,MAAY,CAClC0B,iBAAkByO,EAAmB3M,UAAUrC,oBAAoBnB,GACnE6O,mBAAoBuB,EAAqB5M,UAAUjD,sBAAsBP,GACzEsI,UAAW8H,EAAqB5M,UAAU1C,aAAad,GACvDW,eAAgByP,EAAqB5M,UAAU9C,kBAAkBV,GACjEwP,aAAcW,EAAmB3M,UAAU/B,gBAAgBzB,GAC3DF,YAAaqQ,EAAmB3M,UAAUvC,eAAejB,GACzDa,eAAgBuP,EAAqB5M,UAAU5C,kBAAkBZ,OAGxC,SAACqQ,GAAD,MAAe,CACxC/P,gBAAiB,kBAAM+P,EAASF,EAAmB/N,QAAQ9B,oBAC3DoO,WAAY,SAACxO,GAAD,OAAamQ,EAASD,EAAqBhO,QAAQ4B,mBAAmB9D,KAClF+D,UAAW,SAAC/D,GAAD,OAAamQ,EAASD,EAAqBhO,QAAQ6B,UAAU/D,KACxEgE,gBAAiB,SAAChE,GAAD,OAAamQ,EAASD,EAAqBhO,QAAQ8B,gBAAgBhE,QAGvEgQ,CAA6CN,IC5FxDU,I,OX+BYC,YACZC,YAAgBjN,IAChB+B,KW/BEmL,G,iLAEF,OACE,kBAAC,IAAD,CAAUC,MAAOJ,IACf,kBAAC,GAAD,W,GAJUvH,aAUlB4H,IAASC,OAAO,kBAAC,GAAD,MAAS3E,SAAS4E,eAAe,SxB4G3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjO,MAAK,SAAAkO,GACJA,EAAaC,gBAEdC,OAAM,SAAAhR,GACLC,QAAQD,MAAMA,EAAMiR,c","file":"static/js/main.59733aa5.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const makeConstant = (branchOfState, actionType) => `${branchOfState}-${actionType}`;\n\n","import {\n  makeConstant\n} from \"../../utils\";\nconst STATE_BRANCH = 'EVENTS';\n\nexport const REQUEST_NETWORKS = makeConstant(STATE_BRANCH, \"REQUEST_NETWORKS\");\nexport const SET_NETWORKS = makeConstant(STATE_BRANCH, \"SET_NETWORKS\");\nexport const REQUEST_FAILED = makeConstant(STATE_BRANCH, \"REQUEST_FAILED\");\nconst initialState = {\n  allNetworks: [],\n};\n\n\nconst eventReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case SET_NETWORKS:\n      return {\n        ...state,\n        allNetworks: payload,\n        error: null\n      };\n    case REQUEST_FAILED:\n      console.log(`REQUEST_FAILED: ${payload}`);\n      return {\n        ...state,\n        error: payload\n      };\n     default:\n      return state;\n  }\n};\n\nexport default eventReducer;","import {\n  REQUEST_NETWORKS,\n} from './reducers';\n\n\nexport const requestNetworks = () => ({\n  type: REQUEST_NETWORKS,\n});\n\n","import { createSelector } from 'reselect';\n\nexport const getSelectedCategories = (state) => state.selections.categories;\n// export const getViewState = state => state.selections.view;\nexport const getSearchLocation = state => state.selections.searchLocation;\nexport const getHoveredPointId = state => state.selections.hoveredPointId;\n\nexport const getViewState = createSelector([getSearchLocation], (searchLocation) => {\n    if (searchLocation.lat) {\n        return 'list';\n    }\n    return 'default';\n})","import { createSelector } from 'reselect';\nimport { filter } from 'lodash';\nimport {\n    computeDistanceBetween,\n    LatLng\n} from 'spherical-geometry-js';\n\nimport { getSelectedCategories, getSearchLocation } from '../selections/selectors';\n\nexport const getAllNetworks = state => state.networks.allNetworks;\n\nexport const getFilteredNetworks = createSelector([getAllNetworks, getSelectedCategories], (networks, categories) => {\n    if (!categories.length) {\n        return [];\n    }\n    return filter(networks, (network) => {\n        return categories.includes(network.category)\n    })\n})\n\nexport const getVisibleCards = createSelector(\n    [\n        getFilteredNetworks,\n        getSearchLocation,\n    ],\n    (\n        filteredNetworks,\n        location,\n    ) => {\n        if (!location.lat) {\n            return [];\n        }\n        const lookup = new LatLng(Number(location.lat), Number(location.lng));\n        const maxMeters = 50 * 1609.34; // Convert miles to meters before filtering\n        return filteredNetworks.filter((currentEvent) => {\n            const curDistance = computeDistanceBetween(\n                lookup,\n                new LatLng(Number(currentEvent.lat), Number(currentEvent.lng)),\n            );\n            return curDistance < maxMeters;\n        }).sort((a, b) => {\n            const aDistance = computeDistanceBetween(\n                lookup,\n                new LatLng(Number(a.lat), Number(a.lng)),\n            );\n            const bDistance = computeDistanceBetween(\n                lookup,\n                new LatLng(Number(b.lat), Number(b.lng)),\n            );\n            return aDistance - bDistance;\n        });\n    },\n);","import * as actions from \"./actions\";\nimport reducers from \"./reducers\";\nimport * as selectors from \"./selectors\";\nimport logics from \"./logic\";\n\nexport default {\n    actions,\n    logics,\n    reducers,\n    selectors,\n};","import {\n  createLogic\n} from \"redux-logic\";\n\nimport {\n  REQUEST_NETWORKS,\n  SET_NETWORKS,\n  REQUEST_FAILED\n} from \"./reducers\";\n\nconst fetchNetworks = createLogic({\n  type: REQUEST_NETWORKS,\n  processOptions: {\n    successType: SET_NETWORKS,\n    failType: REQUEST_FAILED,\n  },\n  process(deps) {\n    const {\n      firestore,\n    } = deps;\n    return firestore.collection('mutual_aid_networks').get()\n      .then((snapshot) => {\n        const allNetworks = snapshot.docs.map((doc, index) => {\n          return {\n            ...doc.data(),\n            id: index,\n            category: doc.data().category || 'General',\n          }\n        });\n        return allNetworks;\n      })\n  }\n})\n\n\nexport default [\n  fetchNetworks,\n];","import {\n  makeConstant\n} from \"../../utils\";\n\nconst STATE_BRANCH = 'SELECTIONS';\nexport const SET_CATEGORY_FILTERS = makeConstant(STATE_BRANCH, 'FILTER_BY_CATEGORY');\nexport const SET_LAT_LNG = makeConstant(STATE_BRANCH, 'SET_LAT_LNG');\nexport const SET_HOVERED_POINT = makeConstant(STATE_BRANCH, 'SET_HOVERED_POINT');\n\nexport const options = [\"General\", \"Support Request\", \"Support Offer\", \"Information\"];\n\nconst initialState = {\n  view: 'default',\n  categories: options,\n  language: '',\n  community: '',\n  searchLocation: {},\n  hoveredPointId: null,\n};\n\nconst selectionReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_CATEGORY_FILTERS:\n      return {\n        ...state,\n        categories: action.payload,\n      }\n      case SET_LAT_LNG:\n        return {\n          ...state,\n          searchLocation: action.payload,\n        }\n      case SET_HOVERED_POINT: \n        return {\n          ...state,\n          hoveredPointId: action.payload,\n        }\n        default:\n          return state;\n  }\n};\n\nexport default selectionReducer;","import {\n    SET_CATEGORY_FILTERS,\n    SET_LAT_LNG,\n    SET_HOVERED_POINT\n} from \"./reducers\";\n\nexport const setCategoryFilters = (payload) => ({\n    type: SET_CATEGORY_FILTERS,\n    payload\n});\n\nexport const setLatLng = (payload) => ({\n    type: SET_LAT_LNG,\n    payload,\n});\n\nexport const setHoveredPoint = (payload) => ({\n    type: SET_HOVERED_POINT,\n    payload,\n});","import * as actions from \"./actions\";\nimport reducers from \"./reducers\";\nimport * as selectors from \"./selectors\";\nimport logics from \"./logic\";\n\nexport default {\n    actions,\n    logics,\n    reducers,\n    selectors,\n};","import { createLogic } from \"redux-logic\"\n\n\nexport default [];","// FIREBASE METHODS\n// Initialize Firebase\nimport firebase from 'firebase';\n\nconst PREFIX = process.env.NODE_ENV === \"production\" ? \"REACT_APP_PROD\" : \"REACT_APP_TESTING\";\n\nif (process.env.NODE_ENV !== \"production\") {\n  console.log(process.env[`${PREFIX}_PROJECT_ID`]);\n}\n\nconst config = {\n  apiKey: process.env[`${PREFIX}_FIREBASE_API_KEY`],\n  authDomain: process.env[`${PREFIX}_FIREBASE_AUTH_DOMAIN`],\n  databaseURL: process.env[`${PREFIX}_DATABASE_URL`],\n  storageBucket: process.env[`${PREFIX}_STORAGE_BUCKET`],\n  messagingSenderId: process.env[`${PREFIX}_MESSAGING_SENDER_ID`],\n  projectId: process.env[`${PREFIX}_PROJECT_ID`],\n};\n\nfirebase.initializeApp(config);\nexport const firebasedb = firebase.database();\nexport const firestore = firebase.firestore();\n\nexport default firebase;","import { applyMiddleware, createStore, combineReducers } from 'redux';\nimport { createLogicMiddleware } from 'redux-logic';\nimport request from 'superagent';\n\nimport networks from './networks';\nimport selections from './selections';\n\n\nimport { firebaseUrl } from '../state/constants';\nimport {\n  firebasedb,\n  firestore,\n} from '../utils/firebaseinit';\n\nconst reducers = {\n  networks: networks.reducers,\n  selections: selections.reducers,\n};\n\nconst logics = [\n  ...networks.logics,\n  ...selections.logics,\n];\n\nconst reduxLogicDependencies = {\n  firebaseUrl: firebaseUrl,\n  firebasedb,\n  firestore,\n  httpClient: request,\n};\n\nconst logicMiddleware = createLogicMiddleware(logics, reduxLogicDependencies);\n\nlet middleware = applyMiddleware(\n  logicMiddleware\n);\n\nif (process.env.NODE_ENV === `development` && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) {\n  middleware = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__(middleware);\n}\n\nexport default () => {\n  const store = createStore(\n    combineReducers(reducers),\n    middleware\n  );\n\n  return store;\n};","export const firebaseUrl = process.env.NODE_ENV === \"production\" ? process.env.REACT_APP_PROD_DATABASE_URL : process.env.REACT_APP_TESTING_DATABASE_URL;\n","class Point {\n    constructor(network) {\n        this.type = 'Feature';\n        this.geometry = {\n            coordinates: [Number(network.lng), Number(network.lat)],\n            type: 'Point',\n        };\n        const scale = network.bbox[3] - network.bbox[1];\n        this.properties = {\n            region: network.region,\n            contact: network.contact || null,\n            socials: network.social || null,\n            state: network.state,\n            title: network.title,\n            form: network.form,\n            category: network.category || 'General',\n            bbox: network.bbox,\n            lat: network.lat,\n            lng: network.lng,\n            scale: scale * 10,\n        };\n        this.id = network.id;\n    }\n}\n\nexport default Point;\n","export const LAYER_NAME = 'networks-dots'\nexport const accessToken = 'pk.eyJ1IjoidG93bmhhbGxwcm9qZWN0IiwiYSI6ImNqMnRwOG4wOTAwMnMycG1yMGZudHFxbWsifQ.FXyPo3-AD46IuWjjsGPJ3Q'\n// export const accessToken = 'pk.eyJ1IjoidG93bmhhbGxwcm9qZWN0IiwiYSI6ImNrN3d1c3hhdDA1MmozbW80cW5oOWxzcHoifQ.rq66iVpULeHVB6PutWiunA';\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Point from './Point';\nimport {\n  LAYER_NAME, \n  accessToken\n} from './constants';\n\nconst mapboxgl = window.mapboxgl;\n\nclass MapInset extends React.Component {\n  constructor(props) {\n    super(props);\n    this.addClickListener = this.addClickListener.bind(this);\n    this.addLayer = this.addLayer.bind(this);\n    this.createFeatures = this.createFeatures.bind(this);\n    this.updateData = this.updateData.bind(this);\n\n  }\n\n  componentDidMount() {\n    const { networks } = this.props;\n    const featuresHome = this.createFeatures(networks);\n    this.initializeMap(featuresHome);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const {\n      networks,\n    } = nextProps;\n\n    if (networks.length !== this.props.networks.length) {\n      this.updateData(networks);\n    }\n  }\n\n  updateData(networks) {\n    const featuresHome = this.createFeatures(networks);\n    if (!this.map.getSource(`${LAYER_NAME}-${this.props.stateName}`)) {\n      return;\n    }\n    this.map.getSource(`${LAYER_NAME}-${this.props.stateName}`).setData(featuresHome);\n  }\n\n  createFeatures(networks) {\n    const featuresHome = {\n      features: [],\n      type: 'FeatureCollection',\n    };\n    featuresHome.features = networks.map((network) => {\n\n      const newFeature = new Point(network);\n      return newFeature;\n    });\n    return featuresHome;\n  }\n\n  addClickListener() {\n    const {\n      bounds,\n      setBounds,\n    } = this.props;\n    const { map } = this;\n\n    map.on('click', () => {\n      setBounds(bounds);\n    });\n  }\n\n  addLayer(featuresHome) {\n    this.map.addLayer(\n      {\n        id: `${LAYER_NAME}-${this.props.stateName}`,\n        paint: {\n          'circle-opacity': 0.5,\n          'circle-radius': 7,\n          'circle-stroke-color': '#fff',\n          'circle-stroke-width': 1,\n          'circle-color': [\n            'match',\n            ['get', 'category'],\n            'Support Request',\n            '#ef4822',\n            'Support Offer',\n            '#6ac1e5',\n            'General',\n            '#8048f3',\n            /* other */\n            '#057A8F'\n          ]\n        },\n        source: {\n          data: featuresHome,\n          type: 'geojson',\n        },\n        type: 'circle',\n      },\n      'district_interactive',\n    );\n  }\n\n  initializeMap(featuresHome) {\n    const {\n      bounds,\n      mapId,\n    } = this.props;\n\n    mapboxgl.accessToken =\n        accessToken;\n    const styleUrl = 'mapbox://styles/townhallproject/cjgr7qoqr00012ro4hnwlvsyp';\n\n    this.map = new mapboxgl.Map({\n      container: mapId,\n      doubleClickZoom: false,\n      dragPan: false,\n      scrollZoom: false,\n      style: styleUrl,\n    });\n\n    this.map.fitBounds(bounds, {\n      easeTo: { duration: 0 },\n      linear: true,\n    });\n    // map on 'load'\n    this.map.on('load', () => {\n      this.addClickListener();\n      this.addLayer(featuresHome);\n\n    });\n  }\n\n  render() {\n    const {\n      viewState,\n      mapId,\n    } = this.props;\n    const mapClassNames = classNames({\n      hidden: viewState === 'list',\n      inset: true,\n    });\n    return (\n      <React.Fragment>\n        <div id={mapId} className={mapClassNames} data-bounds={this.props.bounds} />\n      </React.Fragment>\n    );\n  }\n}\n\nMapInset.propTypes = {\n  bounds: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)).isRequired,\n  networks: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  mapId: PropTypes.string.isRequired,\n  stateName: PropTypes.string.isRequired,\n};\n\nMapInset.defaultProps = {\n  selectedState: '',\n};\n\nexport default MapInset;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { find, filter } from 'lodash';\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\n\nimport Point from './Point';\n\nimport MapInset from './MapInset';\nimport './style.scss';\nimport './popover.scss';\nimport './popovertip.scss';\nimport './popover_implementation.scss';\nimport { LAYER_NAME, accessToken } from './constants';\n\nconst mapboxgl = window.mapboxgl;\n\nclass MapView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.filterDistrict = ['any'];\n    this.includedStates = ['in', 'NAME'];\n\n    this.addPopups = this.addPopups.bind(this);\n    this.addClickListener = this.addClickListener.bind(this);\n    this.addLayer = this.addLayer.bind(this);\n    this.createFeatures = this.createFeatures.bind(this);\n    this.updateData = this.updateData.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.insetOnClickEvent = this.insetOnClickEvent.bind(this);\n    this.handleClickOnInset = this.handleClickOnInset.bind(this);\n    this.initializeMap = this.initializeMap.bind(this);\n    this.state = {\n      popoverColor: 'popover-general-icon',\n      bbox: null,\n    };\n  }\n\n  componentDidMount() {\n    const { networks } = this.props;\n    const featuresHome = this.createFeatures(networks);\n    this.initializeMap(featuresHome);\n  }\n\n  componentDidUpdate(prevProps) {\n \n    const {\n      hoveredPointId,\n      viewState,\n      networks\n    } = this.props;\n    this.map.resize();\n    // changed filters\n    if (networks.length !== prevProps.networks.length) {\n      this.updateData(this.props.networks);\n    }\n    // toggled view between full map and zoom\n    if (prevProps.viewState !== viewState) {\n      this.hoveredPopup.remove(); //close any open popup\n      if (viewState === 'default') {\n        this.setInitialState();\n      }\n    }\n    // if a bounding box has been set before render, fix the bounds and clear\n    // for changing map zoom and size\n    if (this.state.bbox && viewState === 'list') {\n      this.map.fitBounds(this.state.bbox);\n      this.setState({\n        bbox: null\n      })\n    }\n    if (hoveredPointId) {\n      this.hoverPoint(hoveredPointId)\n    } \n    if (prevProps.hoveredPointId && prevProps.hoveredPointId !== hoveredPointId) {\n      this.unHoverPoint(prevProps.hoveredPointId);\n    }\n  }\n\n  insetOnClickEvent(e) {\n    this.setState({ inset: false });\n    const dataBounds = e.target.parentNode.parentNode.getAttribute('data-bounds').split(',');\n    const boundsOne = [Number(dataBounds[0]), Number(dataBounds[1])];\n    const boundsTwo = [Number(dataBounds[2]), Number(dataBounds[3])];\n    const bounds = boundsOne.concat(boundsTwo);\n    this.map.fitBounds(bounds);\n  }\n\n  updateData(networks) {\n    const featuresHome = this.createFeatures(networks);\n    this.map.fitBounds([[-128.8, 23.6], [-65.4, 50.2]]);\n    if (!this.map.getSource(LAYER_NAME)) {\n      return;\n    }\n    this.map.getSource(LAYER_NAME).setData(featuresHome);\n  }\n\n  createFeatures(networks) {\n    const featuresHome = {\n      features: [],\n      type: 'FeatureCollection',\n    };\n    featuresHome.features = networks.map((network) => {\n      const newFeature = new Point(network);\n      return newFeature;\n    });\n    return featuresHome;\n  }\n\n  addPopups(layer) {\n    const { map } = this;\n\n    this.hoveredPopup = new mapboxgl.Popup({\n      closeButton: true,\n      closeOnClick: true,\n    });\n\n    map.on('mousemove', (e) => {\n      const features = map.queryRenderedFeatures(e.point, { layers: [layer] });\n      // Change the cursor style as a UI indicator.\n      map.getCanvas().style.cursor = (features.length) ? 'pointer' : '';\n\n      if (features.length) {\n        const feature = features[0];\n        const { properties } = feature;\n        const popoverClassName = `popover-${feature.properties.category.split(' ').join('-').toLowerCase()}`\n        this.setState({\n          popoverColor: popoverClassName\n        });\n        this.props.setHoveredPoint(features[0].id)\n        const link = properties.form ? `<a target=\"_blank\" href=${properties.form}>Link to form</a>` : `<a href=${properties.socials}>Link to group</a>`;\n        return this.hoveredPopup.setLngLat(feature.geometry.coordinates)\n          .setHTML(`\n            <h4>${properties.title}</h4>\n            <div>${link}</div>`)\n \n          .addTo(map);\n      }\n      return undefined;\n    });\n  \n  }\n\n  addClickListener() {\n\n    const { map } = this;\n    const {\n      setLatLng\n    } = this.props;\n\n    map.on('click', (e) => {\n      const features = map.queryRenderedFeatures(\n        e.point,\n        {\n          layers: [LAYER_NAME],\n        },\n      );\n\n      if (features.length > 0) {\n        let bbox = JSON.parse(features[0].properties.bbox);\n        setLatLng({lat: features[0].properties.lat, lng: features[0].properties.lng});\n        this.setState({bbox});\n      }\n    });\n  }\n\n  hoverPoint(hoveredPinId) {\n    this.map.setFeatureState({\n      source: LAYER_NAME,\n      id: hoveredPinId\n    }, {\n      hover: true\n    });\n  };\n\n  unHoverPoint(hoveredPinId) {\n    this.map.setFeatureState({\n      source: LAYER_NAME,\n      id: hoveredPinId\n    }, {\n      hover: false\n    });\n  };\n\n  addLayer(featuresHome) {\n    this.map.addLayer(\n      {\n        id: LAYER_NAME,\n        paint: {\n          // 'circle-opacity': 0.5,\n          'circle-opacity': [\n            'case',\n            ['boolean', ['feature-state', 'hover'], false],\n            1,\n            0.5\n          ],\n          'circle-radius': 8\n          // [\n          //   'interpolate', ['linear'],\n          //   ['number', ['get', 'scale'], 5],\n          //     1,\n          //     5,\n          //     70,\n          //     70\n          // ]\n          , \n          'circle-stroke-color': '#fff',\n          'circle-stroke-width': [\n            'case',\n            ['boolean', ['feature-state', 'hover'], false],\n            2,\n            1\n          ],\n          'circle-color': [\n            'match',\n            ['get', 'category'],\n            'Support Request',\n            '#ef4822',\n            'Support Offer',\n            '#6ac1e5',\n            'General',\n            '#8048f3',\n            /* other */\n            '#057A8F'\n          ]\n        },\n        source: {\n          data: featuresHome,\n          type: 'geojson',\n        },\n        type: 'circle',\n      },\n      'district_interactive',\n    );\n  }\n\n\n  handleReset() {\n    const {\n      setLatLng\n    } = this.props;\n\n    setLatLng({});\n  }\n\n  setInitialState() {\n    this.map.fitBounds([\n      [-128.8, 23.6],\n      [-65.4, 50.2]\n    ]);\n    document.getElementsByClassName('mapboxgl-ctrl-geocoder--input');\n    Array.from(document.getElementsByClassName('mapboxgl-ctrl-geocoder--input')).forEach(ele => {\n      ele.value = '';\n    })\n    this.map.resize();\n  }\n\n  handleClickOnInset(bounds) {\n    // this is for clicking on a state inset\n    this.setState({bbox: bounds})\n\n    const mbBounds = new mapboxgl.LngLatBounds(bounds);\n    const center = mbBounds.getCenter();\n    this.props.setLatLng(center);\n  }\n\n  // Creates the button in our zoom controls to go to the national view\n  makeZoomToNationalButton() {\n    document.querySelector('.mapboxgl-ctrl-compass').remove();\n    if (document.querySelector('.mapboxgl-ctrl-usa')) {\n      document.querySelector('.mapboxgl-ctrl-usa').remove();\n    }\n    const usaButton = document.createElement('button');\n    usaButton.className = 'mapboxgl-ctrl-icon mapboxgl-ctrl-usa';\n    usaButton.innerHTML = '<span class=\"usa-icon\"></span>';\n\n    usaButton.addEventListener('click', this.handleReset);\n    document.querySelector('.mapboxgl-ctrl-group').appendChild(usaButton);\n  }\n\n  initializeMap(featuresHome) {\n    const {\n      setLatLng\n    } = this.props;\n\n    mapboxgl.accessToken = accessToken;\n    const styleUrl = 'mapbox://styles/townhallproject/cjgr7qoqr00012ro4hnwlvsyp';\n\n    this.map = new mapboxgl.Map({\n      container: 'map',\n      style: styleUrl,\n    });\n\n    // Set Mapbox map controls\n    this.map.addControl(new mapboxgl.NavigationControl());\n    this.map.scrollZoom.disable();\n    this.map.dragRotate.disable();\n    this.map.touchZoomRotate.disableRotation();\n    this.makeZoomToNationalButton();\n    const { map } = this;\n    const me = this;\n    this.map.addControl(\n      new MapboxGeocoder({\n        accessToken: mapboxgl.accessToken,\n        mapboxgl: mapboxgl,\n        countries: 'us',\n        marker: false,\n        zoom: 12,\n        flyTo: false,\n      })\n      .on('clear', function (result) {\n        setLatLng({});\n      })\n      .on('result', function (returned) {\n        map.resize();\n        setLatLng({\n          lat: returned.result.center[1],\n          lng: returned.result.center[0]\n        });\n        me.setState({\n          bbox: returned.result.bbox\n        })\n      }),\n      'top-left'\n    );\n    // map on 'load'\n    this.map.on('load', () => {\n      this.map.fitBounds([[-128.8, 23.6], [-65.4, 50.2]]);\n      this.addClickListener();\n      this.addLayer(featuresHome);\n      this.addPopups(LAYER_NAME);\n      // this.map.getSource(LAYER_NAME).setData(featuresHome);\n    });\n  }\n\n  render() {\n    const {\n      center,\n      resetSelections,\n      setLatLng,\n      viewState,\n      networks,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <div id=\"map\" className={this.state.popoverColor}>\n          <div className=\"map-overlay\" id=\"legend\">\n            <MapInset\n              networks={filter(networks, { state: 'AK' })}\n              center={center}\n              stateName=\"AK\"\n              viewState={viewState}\n              resetSelections={resetSelections}\n              setLatLng={setLatLng}\n              setBounds={this.handleClickOnInset}\n              mapId=\"map-overlay-alaska\"\n              bounds={[[-170.15625, 51.72702815704774], [-127.61718749999999, 71.85622888185527]]}\n            />\n            <MapInset\n              networks={filter(networks, { state: 'HI' })}\n              stateName=\"HI\"\n              center={center}\n              viewState={viewState}\n              resetSelections={resetSelections}\n              setLatLng={setLatLng}\n              setBounds={this.handleClickOnInset}\n              mapId=\"map-overlay-hawaii\"\n              bounds={[\n                [-161.03759765625, 18.542116654448996],\n                [-154.22607421875, 22.573438264572406]]}\n            />\n          </div>\n        </div>\n\n      </React.Fragment>\n    );\n  }\n}\n\nMapView.propTypes = {\n  networks: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  setLatLng: PropTypes.func.isRequired,\n};\n\nMapView.defaultProps = {\n\n};\n\nexport default MapView;\n","import React from 'react';\nimport { Button } from 'antd';\nimport './style.scss';\n\nconst SubmitNetwork = () => {\n  return (\n      <div className=\"start-network-container\">\n        <Button \n          id=\"start-network-button\" \n          target=\"_blank\" \n          href=\"https://docs.google.com/forms/d/1Orat2boOrd7dqmWD4LS1yJd5QwK_kSn05OS9BghJKTk/edit?usp=sharing\">\n            Submit a Mutual Aid Network\n        </Button>\n      </div>\n  )\n};\n\nexport default SubmitNetwork;","import React from \"react\";\nimport { Checkbox } from 'antd';\n\nimport { options }  from '../../state/selections/reducers';\n\nimport './style.scss';\n\nconst CheckboxGroup = Checkbox.Group;\n\nclass Filters extends React.Component {\n    state = {\n        // checkedList: this.props.selectedCategories,\n        indeterminate: false,\n        checkAll: true,\n    };\n\n    onChange = checkedList => {\n        \n        this.props.setFilters(checkedList);\n        this.setState({\n            indeterminate: !!checkedList.length && checkedList.length < options.length,\n            checkAll: checkedList.length === options.length,\n        });\n    };\n\n    onCheckAllChange = e => {\n        const checkedList = e.target.checked ? options : [];\n        this.setState({\n            indeterminate: false,\n            checkAll: e.target.checked,\n        });\n        this.props.setFilters(checkedList);\n    };\n\n    render() {\n        return (\n            <div className=\"filter-container\">\n                <div className=\"site-checkbox-all-wrapper\">\n                    <Checkbox\n                        indeterminate={this.state.indeterminate}\n                        onChange={this.onCheckAllChange}\n                        checked={this.state.checkAll}\n                    >\n                        Select all\n                    </Checkbox>\n                </div>\n                <br />\n                <CheckboxGroup\n                    value={this.props.selectedCategories}\n                    onChange={this.onChange}\n                >\n                    {options.map((ele) => <Checkbox key={ele.replace(' ', '-').toLowerCase()} className={ele.replace(' ', '-').toLowerCase()} value={ele}>{ele}</Checkbox>)}\n                </CheckboxGroup>\n            </div>\n        );\n    }\n}\n\nexport default Filters;","import React from 'react';\nimport {\n  Card,\n  Row\n} from 'antd';\nimport './style.scss';\n\n\nconst NetworkCard = (props) => {\n\n  const parseNetworks = (networks) => {\n    return networks.map(network => {\n      const {\n        address,\n        title,\n        neighborhood,\n        form,\n        social,\n        category,\n        community,\n        language,\n        id\n      } = network;\n      return (\n        <Card\n          className='network-card'\n          title={title}\n          key={id}\n          onMouseEnter={\n            () => props.setHoveredPoint(id)\n          }\n          onMouseLeave={\n            () => props.setHoveredPoint(null)\n          }\n          extra={\n            <ul className='list-inline'>\n            {category && <li>{category}</li>}\n            {community && <li>{community}</li>}\n          </ul>\n          }\n        >\n          <ul className='list-inline'>\n            {neighborhood && <li>{neighborhood}</li>}\n            {address && <li>{address}</li>}\n            {language && <li>{language}</li>}\n          </ul>\n          <Row justify=\"space-between\">\n            {form && <a href={form} target=\"_blank\" className=\"button\">Participate in this community</a>}\n            {social && <a href={social} target=\"_blank\" className=\"button\">Join social media</a>}\n          </Row>\n        </Card>\n      )\n    })\n  }\n\n  return (\n    <>\n      {parseNetworks(props.networks)}\n    </>\n  )\n}\n\nexport default NetworkCard\n","import React from 'react';\nimport NetworkCard from '../NetworkCard'\n\nconst ListView = ({ visibleCards, setHoveredPoint }) => {\n  const noNetworkMessage = 'There are no support requests or networks nearby.'\n  return (\n      <div className=\"list-container\">\n        {\n          visibleCards.length ? \n            <NetworkCard \n              setHoveredPoint={setHoveredPoint} \n              networks={visibleCards} /> : noNetworkMessage\n        }\n      </div>\n  )\n};\n\nexport default ListView;","import React from 'react';\nimport {\n  connect\n} from 'react-redux';\nimport { Layout, Menu } from 'antd';\n\nimport networkStateBranch from '../state/networks';\nimport selectionStateBranch from '../state/selections';\nimport MapView from '../components/Map';\nimport SubmitNetwork from '../components/SubmitNetwork';\nimport Filters from '../components/Filters';\nimport ListView from '../components/ListView';\n\nimport './style.scss';\n\nconst { Header, Content, Footer } = Layout;\n\nclass DefaultLayout extends React.Component {\n  componentDidMount() {\n    const {\n      requestNetworks\n    } = this.props;\n    requestNetworks();\n  }\n  render() {\n    const {\n      setFilters,\n      selectedCategories,\n      filteredNetworks,\n      viewState,\n      setLatLng,\n      visibleCards,\n      allNetworks,\n      setHoveredPoint,\n      hoveredPointId\n    } = this.props;\n    \n    if (!allNetworks.length) {\n      return null;\n    }\n    // viewState --> list or default\n    return (\n      <Layout className=\"layout\">\n        <Header>\n          <div className=\"logo\">Mutual Aid Hub</div>\n          <Menu\n            theme=\"dark\"\n            mode=\"horizontal\"\n            style={{ lineHeight: '64px' }}\n          >\n            {/* <Menu.Item key=\"1\">Guides and other resources</Menu.Item> */}\n          </Menu>\n        </Header>\n        <Content style={{ padding: '0 50px' }}>\n          <div className=\"main-container\">\n            <Filters \n              setFilters={setFilters}\n              selectedCategories={selectedCategories}\n            />\n            <div className={`interactive-content-${viewState}`}>\n              <MapView\n                networks={filteredNetworks}\n                viewState={viewState}\n                setLatLng={setLatLng}\n                hoveredPointId={hoveredPointId}\n                setHoveredPoint={setHoveredPoint}\n              />\n              <ListView \n                visibleCards={visibleCards}\n                setHoveredPoint={setHoveredPoint}\n              />\n            </div>\n            <div className=\"tagline\">Find Mutual Aid Networks and other community self-support projects near you. Join these important efforts, offer resources, or submit needs requests.</div>\n            <SubmitNetwork />\n          </div>\n        </Content>\n        <Footer style={{ textAlign: 'center' }}>\n          <div className=\"footer-text\">\n            We list these networks as a public resource. We cannot verify or vouch for any network or individual offerings. Please exercise all necessary judgement when interacting with community members not previously known to you.\n          </div>\n        </Footer>\n      </Layout>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  filteredNetworks: networkStateBranch.selectors.getFilteredNetworks(state),\n  selectedCategories: selectionStateBranch.selectors.getSelectedCategories(state),\n  viewState: selectionStateBranch.selectors.getViewState(state),\n  searchLocation: selectionStateBranch.selectors.getSearchLocation(state),\n  visibleCards: networkStateBranch.selectors.getVisibleCards(state),\n  allNetworks: networkStateBranch.selectors.getAllNetworks(state),\n  hoveredPointId: selectionStateBranch.selectors.getHoveredPointId(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  requestNetworks: () => dispatch(networkStateBranch.actions.requestNetworks()),\n  setFilters: (payload) => dispatch(selectionStateBranch.actions.setCategoryFilters(payload)),\n  setLatLng: (payload) => dispatch(selectionStateBranch.actions.setLatLng(payload)),\n  setHoveredPoint: (payload) => dispatch(selectionStateBranch.actions.setHoveredPoint(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DefaultLayout);\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport configureStore from './state/store';\n// Containers\nimport DefaultLayout from './containers/DefaultLayout';\nimport './index.css';\n\n// Bootstrap the store\nvar Store = configureStore();\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={Store}>\n        <DefaultLayout />\n      </Provider>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}